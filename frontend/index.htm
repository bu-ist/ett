<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="ETT Home Page" content="">
    <meta name="author" content="Don Yurt, Warren Hennemuth">
    <title>ETT Home Page</title>

    <!-- download bootstrap -->
    <link rel="canonical" href="https://getbootstrap.com/docs/5.3.2/examples/jumbotron/">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

    <!-- download bootstrap icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <!-- download popper for tooltips -->
    <script defer src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"></script>

    <!-- Favicons -->
    <meta name="theme-color" content="#712cf9">

    <!-- download jquery -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

    <style>
      .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
      }

      @media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }

      .b-example-divider {
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
      }

      .b-example-vr {
        flex-shrink: 0;
        width: 1.5rem;
        height: 100vh;
      }

      .bi {
        vertical-align: -.125em;
        fill: currentColor;
      }

      .nav-scroller {
        position: relative;
        z-index: 2;
        height: 2.75rem;
        overflow-y: hidden;
      }

      .nav-scroller .nav {
        display: flex;
        flex-wrap: nowrap;
        padding-bottom: 1rem;
        margin-top: -1px;
        overflow-x: auto;
        text-align: center;
        white-space: nowrap;
        -webkit-overflow-scrolling: touch;
      }

      .containerRDO {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 22px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }

      /* Hide the browser's default radio button */
      .containerRDO input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
      }

      /* Create a custom radio button */
      .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 25px;
        width: 25px;
        background-color: #eee;
        border-radius: 50%;
      }

      /* On mouse-over, add a grey background color */
      .containerRDO:hover input ~ .checkmark {
        background-color: #ccc;
      }

      /* When the radio button is checked, add a blue background */
      .containerRDO input:checked ~ .checkmark {
        background-color: #2196F3;
      }

      /* Create the indicator (the dot/circle - hidden when not checked) */
      .checkmark:after {
        content: "";
        position: absolute;
        display: none;
      }

      /* Show the indicator (dot/circle) when checked */
      .containerRDO input:checked ~ .checkmark:after {
        display: block;
      }

      /* Style the indicator (dot/circle) */
      .containerRDO .checkmark:after {
        top: 9px;
        left: 9px;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: white;
      }

      .outerButtonContainer {
        border:#ccc 1px solid; 
        border-radius:15px; 
        padding:15px; 
        margin-top:30px; 
        width:90%;
        display:flex; 
        justify-content: center;
      }

      table {
        width: 100%;
      }

      th, td {
        border: 1px solid black
      }

      td {
        padding: 5px;
      }

      .trHeading {
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        font-weight: bold;
      }

      .tdHeading {
        background-color: rgb(84, 123, 196);
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        font-weight: bold;
        color:white;
        padding-left: 10px;
        padding-right: 20px;
        text-wrap: nowrap;
      }

      .tdEntry {
        width: 50%;
      }

      .tdSpacing {
        border: 0px solid black;
      }

      .ackSubmit {
        float: left;
      }

      hr {
        width: 80%;
        height: 1px;
        border: none;
        margin: 0 auto; 
        background-color: black;
      }

      #apiResponse {
        position: fixed;
        /* height: 100px; */
        bottom: 0;
        width: 100%;
        color:green;
        background-color: white;
      }

      pre {
        color:white;
        background-color: red;
        padding: 10px;
      }

      .divSysAdminOption {
        width: 450px;
        text-align: right;
        vertical-align: middle;
        padding: 10px;
      }

      h3 {
        text-align: center;
        margin-bottom: 20px;
        margin-top: 20px  
      }

      #stage {
        padding: 20px;
      }

      #stage:hover {
        background-color: yellow !important;
        color: black !important;
      }

      i {
        font-size: 2rem;
        padding: 2px;
        vertical-align: middle;
      }

      .idiv {
        text-align: center; 
        width: fit-content; 
        display: inline-block;
        vertical-align: middle;
        height: 100%;
      }

      .consenterFields {
        float:left; 
        clear: none; 
        padding-right:10px;
        padding-top:10px;
      }

      span[data-toggle="tooltip"] {
        text-decoration: underline;
      }

      /* ol {
        text-align: left;
      } */

      ol > li::marker {
        font-weight: bold;
      }

      /* background-color: rgb(217, 225, 242); */
      /* background-color:rgb(84, 123, 196); */
      /* background-color:rgb(33, 54, 95); */
      #tblPoc > thead > tr > td {
        font-weight:bold;
        color: white;
        text-align:center;
        vertical-align: middle;
        background-color:rgb(84, 123, 196);
        border-style: solid;
        border-color: white;
        padding: 10px;
      }

      #tblPoc > tbody > tr > td {
        background-color: rgb(217, 225, 242);
        border-style: none;
        padding: 10px;
      }

      .tooltip-inner {
        max-width: 500px;
        text-align:left;
      }

      table.sysAdminConfig, table.sysAdminConfig th, table.sysAdminConfig td {
        border: 1px solid black;
        border-collapse: collapse;
      }
      table.sysAdminConfig th {
        font-weight: bold;
        text-align: center;
        vertical-align: middle;
      }
      table.sysAdminConfig td, table.sysAdminConfig th {
        padding: 15px;
      }
      div.dbTableLabel {
        display:inline-block; 
        font-size:1.25rem; 
        font-weight:500; 
        min-width: 102px; 
        text-align:right;
      }
      /* div.bdp-input {

      /* .text-left {
        text-align: left;
      } */
    </style>

  </head>


  <body>
    <main>
     <div class="container py-4">

        <!-- Top Banner -->
        <header class="pb-3 mb-4 border-bottom">
          <a href="/" class="d-flex align-items-center text-dark text-decoration-none">
            <img src="https://societiesconsortium.com/wp-content/uploads/2019/05/SocietiesConsortium_on_SexualHarassmentin.svg" height="20%" width="20%" />            
            <span class="fs-4 ps-4"><img src="./title1.png" /></span>
          </a>
        </header>

          <!---------------------------------------------------->
          <!--          ENTITY PRIVACY POLICY SECTION         -->
          <!---------------------------------------------------->
          <div class="p-5 mb-4 bg-light rounded-3">
          <div id="acknowledge-entity-section" class="container-fluid py-5" style="display: none">
            <h3 class="display-7 fw-bold" style="text-align:center">Privacy Notice for Entities</h3>
            <p class="text-justify fs-4" style="text-align:justify;">
              <p>
                The Ethical Transparency Tool (ETT) Database, where you complete an entity’s ETT Registration Form or an Individual’s Registration Form, 
                Consent Form, and Exhibit Forms, is hosted on a server and kept on computers in the United States, governed by United States law.  
                So, you are transferring the personally identifiable data requested of you to a server or computers in the U.S.  
                By doing so, you are consenting to that transfer and to your data being further transferred in or outside the U.S. within the ETT design.  
                (ETT’s design is summarized in links from the Consent Form, Exhibit Forms, and Disclosure Form.)                
              </p>
              <p>
                If you are a citizen of or reside in another country, the privacy laws of that home country (or its states, provinces, or other divisions) 
                may be more protective than U.S. laws.  Subject to applicable U.S. laws, the ETT Database has been reasonably designed to protect against 
                the ETT Database itself transferring your personal data to anyone other than those meant to receive it within the ETT design. 
                However, your data on servers and computers in the U.S. may be subject to access by governments, courts, law enforcement officials and 
                national security authorities in the U.S. under U.S. or state/local laws.  Also, ETT specifies limits on use of your data by those who 
                receive it within the ETT design, but ETT does not oversee or control the recipients.  (The Consent Form and Disclosure Form describe the 
                recipients and use limits.)                
              </p>
              <p>
                By submitting your Entity’s Registration Form or your Individual Registration Form, Consent Form, or Affiliate Exhibit Forms on ETT, you 
                are acknowledging having reviewed and are agreeing to be bound to terms of the ETT Privacy Notices and ETT Privacy Policy.”                
              </p>
              <!-- Button trigger modal -->
              <div style="display:flex; justify-content: center; padding-top: 15px; padding-bottom: 35px;">
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop1">
                  View privacy policy
                </button>
              </div>
              <!-- Modal -->
              <div class="modal fade" id="staticBackdrop1" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdrop1Label" aria-hidden="true">
                <div class="modal-dialog  modal-dialog-scrollable">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="staticBackdrop1Label">ETT privacy policy</h5>
                      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Sit amet mauris commodo quis imperdiet massa tincidunt nunc pulvinar. Porta non pulvinar neque laoreet suspendisse interdum consectetur libero. Vivamus at augue eget arcu. Ut pharetra sit amet aliquam id diam maecenas ultricies mi. Gravida in fermentum et sollicitudin ac orci. Risus nec feugiat in fermentum posuere. Leo duis ut diam quam nulla porttitor massa id neque. Adipiscing elit pellentesque habitant morbi tristique. Ullamcorper a lacus vestibulum sed arcu. Tempor nec feugiat nisl pretium fusce id velit. Et pharetra pharetra massa massa ultricies mi quis hendrerit dolor. Quisque id diam vel quam. Ac tortor vitae purus faucibus ornare suspendisse. Ornare arcu dui vivamus arcu. Sit amet commodo nulla facilisi. Sed id semper risus in hendrerit gravida rutrum. Faucibus pulvinar elementum integer enim neque volutpat ac tincidunt vitae. Tincidunt tortor aliquam nulla facilisi cras fermentum odio eu feugiat.
                      Pellentesque massa placerat duis ultricies. Est lorem ipsum dolor sit amet consectetur adipiscing. Ipsum dolor sit amet consectetur adipiscing elit duis. Est ultricies integer quis auctor elit sed vulputate. Vel pretium lectus quam id. Morbi tincidunt ornare massa eget egestas purus viverra. Bibendum est ultricies integer quis auctor. Vitae auctor eu augue ut. Cum sociis natoque penatibus et. Sed vulputate odio ut enim blandit volutpat maecenas volutpat.
                      Urna porttitor rhoncus dolor purus non enim. Lectus sit amet est placerat. Sit amet volutpat consequat mauris nunc congue nisi. Ac placerat vestibulum lectus mauris ultrices eros. Sed id semper risus in hendrerit gravida rutrum quisque non. Morbi quis commodo odio aenean sed adipiscing diam. Magna etiam tempor orci eu. Amet volutpat consequat mauris nunc congue nisi vitae suscipit tellus. Turpis egestas maecenas pharetra convallis. Morbi tristique senectus et netus. Suspendisse interdum consectetur libero id faucibus nisl tincidunt eget. In fermentum posuere urna nec tincidunt praesent semper feugiat. Sit amet volutpat consequat mauris nunc congue nisi vitae suscipit.
                      Morbi quis commodo odio aenean sed adipiscing diam donec. Fames ac turpis egestas integer eget aliquet nibh. Aenean euismod elementum nisi quis eleifend. Velit euismod in pellentesque massa placerat duis. Consectetur adipiscing elit pellentesque habitant morbi tristique. Eget dolor morbi non arcu risus quis. Ultrices vitae auctor eu augue ut lectus. Massa sed elementum tempus egestas sed sed risus pretium quam. Arcu cursus euismod quis viverra nibh cras pulvinar mattis. Et malesuada fames ac turpis egestas maecenas pharetra. Nunc sed velit dignissim sodales ut eu sem. Arcu felis bibendum ut tristique et. Egestas dui id ornare arcu odio ut sem. Phasellus faucibus scelerisque eleifend donec pretium vulputate sapien nec sagittis. Sit amet mauris commodo quis. Habitasse platea dictumst vestibulum rhoncus est pellentesque.
                      Eleifend donec pretium vulputate sapien nec sagittis aliquam. Ipsum dolor sit amet consectetur adipiscing elit. Id consectetur purus ut faucibus pulvinar elementum integer enim. Ipsum consequat nisl vel pretium lectus quam id leo. Fringilla phasellus faucibus scelerisque eleifend. Sed risus ultricies tristique nulla aliquet enim tortor at. Mauris in aliquam sem fringilla ut morbi tincidunt. Ut tristique et egestas quis ipsum. Praesent elementum facilisis leo vel fringilla est ullamcorper eget nulla. Egestas quis ipsum suspendisse ultrices gravida dictum fusce.
                      Aliquam ut porttitor leo a diam sollicitudin. Parturient montes nascetur ridiculus mus mauris vitae ultricies leo integer. Et ligula ullamcorper malesuada proin libero. Enim tortor at auctor urna nunc. Vel orci porta non pulvinar neque. Neque viverra justo nec ultrices dui sapien eget. Mi bibendum neque egestas congue quisque egestas diam in. Eu augue ut lectus arcu bibendum at varius. Est ultricies integer quis auctor. Turpis tincidunt id aliquet risus feugiat in ante metus dictum. Nulla pharetra diam sit amet nisl suscipit.
                      Imperdiet nulla malesuada pellentesque elit eget gravida cum sociis natoque. Ridiculus mus mauris vitae ultricies. Placerat orci nulla pellentesque dignissim enim sit amet venenatis. Dui sapien eget mi proin sed. Nunc eget lorem dolor sed viverra ipsum nunc aliquet. Nulla porttitor massa id neque aliquam vestibulum. Faucibus purus in massa tempor nec feugiat nisl. Neque laoreet suspendisse interdum consectetur libero id faucibus nisl tincidunt. Placerat orci nulla pellentesque dignissim. Tempus egestas sed sed risus pretium quam vulputate dignissim. Vitae tempus quam pellentesque nec. Semper viverra nam libero justo laoreet sit amet. Lobortis elementum nibh tellus molestie nunc non blandit massa enim. Nulla facilisi etiam dignissim diam quis enim lobortis scelerisque.
                      In cursus turpis massa tincidunt dui ut ornare lectus sit. Vivamus arcu felis bibendum ut tristique et. Urna porttitor rhoncus dolor purus non enim praesent elementum facilisis. Nulla pharetra diam sit amet nisl suscipit adipiscing bibendum. Tellus rutrum tellus pellentesque eu tincidunt tortor aliquam nulla facilisi. Sit amet nisl suscipit adipiscing bibendum est ultricies integer. Semper quis lectus nulla at volutpat diam ut venenatis tellus. Pulvinar etiam non quam lacus suspendisse faucibus interdum. Commodo elit at imperdiet dui accumsan sit amet nulla. Et sollicitudin ac orci phasellus egestas tellus rutrum tellus. At consectetur lorem donec massa sapien faucibus et molestie ac. Enim tortor at auctor urna nunc. Pretium aenean pharetra magna ac placerat vestibulum. Augue eget arcu dictum varius duis at consectetur lorem donec. Nulla facilisi morbi tempus iaculis urna id volutpat lacus laoreet. Sem viverra aliquet eget sit amet tellus cras adipiscing. Tristique nulla aliquet enim tortor at auctor. Lacus laoreet non curabitur gravida arcu. Adipiscing tristique risus nec feugiat in fermentum posuere urna. Arcu bibendum at varius vel pharetra vel turpis.
                      Nunc non blandit massa enim nec dui nunc mattis. Pellentesque nec nam aliquam sem et tortor consequat id porta. Tempor nec feugiat nisl pretium. Cursus sit amet dictum sit amet justo. Fermentum posuere urna nec tincidunt. Id diam maecenas ultricies mi eget. Dolor sit amet consectetur adipiscing elit. Fermentum odio eu feugiat pretium nibh ipsum consequat. Lacus suspendisse faucibus interdum posuere lorem. Lobortis scelerisque fermentum dui faucibus in.
                      Tellus pellentesque eu tincidunt tortor aliquam nulla facilisi cras fermentum. Non tellus orci ac auctor augue mauris augue neque. Etiam erat velit scelerisque in dictum non consectetur a. Adipiscing elit pellentesque habitant morbi tristique. Facilisis sed odio morbi quis commodo odio aenean sed adipiscing. Lectus quam id leo in vitae turpis massa sed elementum. Massa ultricies mi quis hendrerit dolor magna eget. Diam vulputate ut pharetra sit amet aliquam. Metus dictum at tempor commodo ullamcorper a lacus. Netus et malesuada fames ac turpis. Leo a diam sollicitudin tempor id eu nisl. A scelerisque purus semper eget duis at. Odio pellentesque diam volutpat commodo sed egestas egestas fringilla phasellus. Eget felis eget nunc lobortis mattis aliquam. Vulputate eu scelerisque felis imperdiet proin.
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
                    </div>
                  </div>
                </div>
              </div>
              <hr>
              <table style="border-style:none; width:80%;">
                <tr>
                  <td style="text-align:right; border-style:none; font-size:20px;">
                    "By registering to use the ETT in my capacity as an Authorized Individual
                    <br>
                    or Administrative Support Professional of an ETT Registered Entity,
                    <br>
                    I have read, accept and agree to all terms of the ETT privacy policy"                 
                    &nbsp;<input id="chkAcknowledgeEntity" type="checkbox" class="form-check-input" onclick="document.getElementById('btnAcknowledgeEntitySubmit').disabled = !this.checked;"/> 
                  </td>
                  <td style="padding-left:10px; border-style:none; vertical-align: bottom;">
                    <button id="btnAcknowledgeEntitySubmit" class="btn btn-primary btn-lg" type="button" disabled>Submit</button>&nbsp;
                  </td>
                </tr>
              </table>
            </p>
          </div>

          <!---------------------------------------------------->
          <!--        CONSENTER PRIVACY POLICY SECTION        -->
          <!---------------------------------------------------->
          <div id="acknowledge-consenter-section" class="container-fluid py-5" style="display: none">
            <h3 class="display-7 fw-bold" style="text-align:center">Privacy Notice for Consenting Individuals</h3>
            <p class="text-justify fs-4" style="text-align:justify;">
              <p>
                The Ethical Transparency Tool (ETT) Database, where you complete your  Individual, Registration 
                Form, Consent Form, and Exhibit Forms, is hosted on a server and kept on computers in the United 
                States, governed by United States law.  So, you are transferring the personally identifiable data 
                requested of you to a server or computers in the U.S.  By doing so, you are consenting to that 
                transfer and to your data being further transferred in or outside the U.S. within the ETT design.  
                (ETT’s design is summarized in links from the Consent Form, Exhibit Forms, and Disclosure Form.)                
              </p>
              <p>
                If you are a citizen of or reside in another country, the privacy laws of that home country (or 
                its states, provinces, or other divisions) may be more protective than U.S. laws.  Subject to 
                applicable U.S. laws, the ETT Database has been reasonably designed to protect against the ETT 
                Database itself transferring your personal data to anyone other than those meant to receive it 
                within the ETT design. However, your data on servers and computers in the U.S. may be subject 
                to access by governments, courts, law enforcement officials and national security authorities 
                in the U.S. under U.S. or state/local laws.  Also, ETT specifies limits on use of your data by 
                those who receive it within the ETT design, but ETT does not oversee or control the recipients.  
                (The Consent Form and Disclosure Form describe the recipients and use limits.)                
              </p>
              <p>
                By submitting your Individual Registration Form, Consent Form, or Affiliate Exhibit Forms on 
                ETT, you are acknowledging having reviewed and are agreeing to be bound to terms of the ETT 
                Privacy Notices and ETT Privacy Policy at [INSERT LINK]                
              </p>
              <!-- Button trigger modal -->
              <div style="display:flex; justify-content: center; padding-top: 15px; padding-bottom: 35px;">
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop2">
                  View privacy policy
                </button>
              </div>
              <!-- Modal -->
              <div class="modal fade" id="staticBackdrop2" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdrop2Label" aria-hidden="true">
                <div class="modal-dialog  modal-dialog-scrollable">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="staticBackdrop2Label">ETT privacy policy</h5>
                      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Sit amet mauris commodo quis imperdiet massa tincidunt nunc pulvinar. Porta non pulvinar neque laoreet suspendisse interdum consectetur libero. Vivamus at augue eget arcu. Ut pharetra sit amet aliquam id diam maecenas ultricies mi. Gravida in fermentum et sollicitudin ac orci. Risus nec feugiat in fermentum posuere. Leo duis ut diam quam nulla porttitor massa id neque. Adipiscing elit pellentesque habitant morbi tristique. Ullamcorper a lacus vestibulum sed arcu. Tempor nec feugiat nisl pretium fusce id velit. Et pharetra pharetra massa massa ultricies mi quis hendrerit dolor. Quisque id diam vel quam. Ac tortor vitae purus faucibus ornare suspendisse. Ornare arcu dui vivamus arcu. Sit amet commodo nulla facilisi. Sed id semper risus in hendrerit gravida rutrum. Faucibus pulvinar elementum integer enim neque volutpat ac tincidunt vitae. Tincidunt tortor aliquam nulla facilisi cras fermentum odio eu feugiat.
                      Pellentesque massa placerat duis ultricies. Est lorem ipsum dolor sit amet consectetur adipiscing. Ipsum dolor sit amet consectetur adipiscing elit duis. Est ultricies integer quis auctor elit sed vulputate. Vel pretium lectus quam id. Morbi tincidunt ornare massa eget egestas purus viverra. Bibendum est ultricies integer quis auctor. Vitae auctor eu augue ut. Cum sociis natoque penatibus et. Sed vulputate odio ut enim blandit volutpat maecenas volutpat.
                      Urna porttitor rhoncus dolor purus non enim. Lectus sit amet est placerat. Sit amet volutpat consequat mauris nunc congue nisi. Ac placerat vestibulum lectus mauris ultrices eros. Sed id semper risus in hendrerit gravida rutrum quisque non. Morbi quis commodo odio aenean sed adipiscing diam. Magna etiam tempor orci eu. Amet volutpat consequat mauris nunc congue nisi vitae suscipit tellus. Turpis egestas maecenas pharetra convallis. Morbi tristique senectus et netus. Suspendisse interdum consectetur libero id faucibus nisl tincidunt eget. In fermentum posuere urna nec tincidunt praesent semper feugiat. Sit amet volutpat consequat mauris nunc congue nisi vitae suscipit.
                      Morbi quis commodo odio aenean sed adipiscing diam donec. Fames ac turpis egestas integer eget aliquet nibh. Aenean euismod elementum nisi quis eleifend. Velit euismod in pellentesque massa placerat duis. Consectetur adipiscing elit pellentesque habitant morbi tristique. Eget dolor morbi non arcu risus quis. Ultrices vitae auctor eu augue ut lectus. Massa sed elementum tempus egestas sed sed risus pretium quam. Arcu cursus euismod quis viverra nibh cras pulvinar mattis. Et malesuada fames ac turpis egestas maecenas pharetra. Nunc sed velit dignissim sodales ut eu sem. Arcu felis bibendum ut tristique et. Egestas dui id ornare arcu odio ut sem. Phasellus faucibus scelerisque eleifend donec pretium vulputate sapien nec sagittis. Sit amet mauris commodo quis. Habitasse platea dictumst vestibulum rhoncus est pellentesque.
                      Eleifend donec pretium vulputate sapien nec sagittis aliquam. Ipsum dolor sit amet consectetur adipiscing elit. Id consectetur purus ut faucibus pulvinar elementum integer enim. Ipsum consequat nisl vel pretium lectus quam id leo. Fringilla phasellus faucibus scelerisque eleifend. Sed risus ultricies tristique nulla aliquet enim tortor at. Mauris in aliquam sem fringilla ut morbi tincidunt. Ut tristique et egestas quis ipsum. Praesent elementum facilisis leo vel fringilla est ullamcorper eget nulla. Egestas quis ipsum suspendisse ultrices gravida dictum fusce.
                      Aliquam ut porttitor leo a diam sollicitudin. Parturient montes nascetur ridiculus mus mauris vitae ultricies leo integer. Et ligula ullamcorper malesuada proin libero. Enim tortor at auctor urna nunc. Vel orci porta non pulvinar neque. Neque viverra justo nec ultrices dui sapien eget. Mi bibendum neque egestas congue quisque egestas diam in. Eu augue ut lectus arcu bibendum at varius. Est ultricies integer quis auctor. Turpis tincidunt id aliquet risus feugiat in ante metus dictum. Nulla pharetra diam sit amet nisl suscipit.
                      Imperdiet nulla malesuada pellentesque elit eget gravida cum sociis natoque. Ridiculus mus mauris vitae ultricies. Placerat orci nulla pellentesque dignissim enim sit amet venenatis. Dui sapien eget mi proin sed. Nunc eget lorem dolor sed viverra ipsum nunc aliquet. Nulla porttitor massa id neque aliquam vestibulum. Faucibus purus in massa tempor nec feugiat nisl. Neque laoreet suspendisse interdum consectetur libero id faucibus nisl tincidunt. Placerat orci nulla pellentesque dignissim. Tempus egestas sed sed risus pretium quam vulputate dignissim. Vitae tempus quam pellentesque nec. Semper viverra nam libero justo laoreet sit amet. Lobortis elementum nibh tellus molestie nunc non blandit massa enim. Nulla facilisi etiam dignissim diam quis enim lobortis scelerisque.
                      In cursus turpis massa tincidunt dui ut ornare lectus sit. Vivamus arcu felis bibendum ut tristique et. Urna porttitor rhoncus dolor purus non enim praesent elementum facilisis. Nulla pharetra diam sit amet nisl suscipit adipiscing bibendum. Tellus rutrum tellus pellentesque eu tincidunt tortor aliquam nulla facilisi. Sit amet nisl suscipit adipiscing bibendum est ultricies integer. Semper quis lectus nulla at volutpat diam ut venenatis tellus. Pulvinar etiam non quam lacus suspendisse faucibus interdum. Commodo elit at imperdiet dui accumsan sit amet nulla. Et sollicitudin ac orci phasellus egestas tellus rutrum tellus. At consectetur lorem donec massa sapien faucibus et molestie ac. Enim tortor at auctor urna nunc. Pretium aenean pharetra magna ac placerat vestibulum. Augue eget arcu dictum varius duis at consectetur lorem donec. Nulla facilisi morbi tempus iaculis urna id volutpat lacus laoreet. Sem viverra aliquet eget sit amet tellus cras adipiscing. Tristique nulla aliquet enim tortor at auctor. Lacus laoreet non curabitur gravida arcu. Adipiscing tristique risus nec feugiat in fermentum posuere urna. Arcu bibendum at varius vel pharetra vel turpis.
                      Nunc non blandit massa enim nec dui nunc mattis. Pellentesque nec nam aliquam sem et tortor consequat id porta. Tempor nec feugiat nisl pretium. Cursus sit amet dictum sit amet justo. Fermentum posuere urna nec tincidunt. Id diam maecenas ultricies mi eget. Dolor sit amet consectetur adipiscing elit. Fermentum odio eu feugiat pretium nibh ipsum consequat. Lacus suspendisse faucibus interdum posuere lorem. Lobortis scelerisque fermentum dui faucibus in.
                      Tellus pellentesque eu tincidunt tortor aliquam nulla facilisi cras fermentum. Non tellus orci ac auctor augue mauris augue neque. Etiam erat velit scelerisque in dictum non consectetur a. Adipiscing elit pellentesque habitant morbi tristique. Facilisis sed odio morbi quis commodo odio aenean sed adipiscing. Lectus quam id leo in vitae turpis massa sed elementum. Massa ultricies mi quis hendrerit dolor magna eget. Diam vulputate ut pharetra sit amet aliquam. Metus dictum at tempor commodo ullamcorper a lacus. Netus et malesuada fames ac turpis. Leo a diam sollicitudin tempor id eu nisl. A scelerisque purus semper eget duis at. Odio pellentesque diam volutpat commodo sed egestas egestas fringilla phasellus. Eget felis eget nunc lobortis mattis aliquam. Vulputate eu scelerisque felis imperdiet proin.
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
                    </div>
                  </div>
                </div>
              </div>
              <hr>
              <table style="border-style:none; width:80%;">
                <tr>
                  <td style="text-align:right; border-style:none; font-size:20px;">
                    "By registering to use the ETT in my capacity as a consenting individual
                    <br>
                    I have read, accept and agree to all terms of the ETT privacy policy"                 
                    &nbsp;<input id="chkAcknowledgeConsenter" type="checkbox" class="form-check-input" onclick="document.getElementById('btnAcknowledgeConsenterSubmit').disabled = !this.checked;"/> 
                  </td>
                  <td style="padding-left:10px; border-style:none; vertical-align: bottom;">
                    <button id="btnAcknowledgeConsenterSubmit" class="btn btn-primary btn-lg" type="button" disabled>Submit</button>&nbsp;
                  </td>
                </tr>
              </table>
            </p>
          </div>

          <!---------------------------------------------------->
          <!--           ENTITY REGISTRATION SECTION          -->
          <!---------------------------------------------------->
          <div id="register-entity-section" class="container-fluid py-5" style="display: none">
            <h3 class="display-7 fw-bold">Entity Registration Form</h3>
            <p class="text-justify fs-4" style="text-align:justify;">
              <table id='tblEntityName'>
                <tr>
                  <td class='tdHeading' colspan=1 style="padding-right:50px;">Name of organization</td>
                  <td id="tdEntityName" colspan=3 style="width:100%"></td>
                </tr>
                <tr><td class='tdSpacing' colspan=4>&nbsp;</td></tr>
              </table>
              <table id="tblReAdmin">
                <tr><td class='trHeading' colspan=4>Administrative support professional<sup>1</sup></td></tr>
                <tr>
                  <td id='tdReAdminNameLabel' class='tdHeading'>Name</td>
                  <td id='tdReAdminName' class='tdEntry'></td>
                  <td id='tdReAdminTitleLabel' class='tdHeading'>Title</td>
                  <td id='tdReAdminTitle' class='tdEntry'></td>
                </tr>
                <tr>
                  <td id='tdReAdminPhoneLabel' class='tdHeading'>Phone</td>
                  <td id='tdReAdminPhone' class='tdEntry'></td>
                  <td id='tdReAdminEmailLabel' class='tdHeading'>Email</td>
                  <td id='tdReAdminEmail' class='tdEntry'></td>
                </tr>
                <tr><td class='tdSpacing' colspan=4>&nbsp;</td></tr>
              </table>
              <table id="tblAuthInd1">
                <tr><td class='trHeading' colspan=4>Authorized Individual 1<sup>2</sup></td></tr>
                <tr>
                  <td id='tdAuthIndName1Label' class='tdHeading'>Name</td>
                  <td id='tdAuthIndName1' class='tdEntry'></td>
                  <td id='tdAuthIndTitle1Label' class='tdHeading'>Title</td>
                  <td id="tdAuthIndTitle1" class='tdEntry'></td>
                </tr>
                <tr>
                  <td id='tdAuthIndPhone1Label' class='tdHeading'>Phone</td>
                  <td id='tdAuthIndPhone1' class='tdEntry'></td>
                  <td id='tdAuthIndEmail1Label' class='tdHeading'>Email</td>
                  <td id='tdAuthIndEmail1' class='tdEntry'></td>
                </tr>
                <tr><td class='tdSpacing' colspan=4>&nbsp;</td></tr>
              </table>
              <table id="tblAuthInd2">
                <tr><td class='trHeading'colspan=4 class='tdHeading'>Authorized Individual 2<sup>3</sup></td></tr>
                <tr>
                  <td id='tdAuthIndName2Label' class='tdHeading'>Name</td>
                  <td id='tdAuthIndName2' class='tdEntry'></td>
                  <td id='tdAuthIndTitle2Label' class='tdHeading'>Title</td>
                  <td id="tdAuthIndTitle2" class='tdEntry'></td>
                </tr>
                <tr>
                  <td id='tdAuthIndPhone2Label' class='tdHeading'>Phone</td>
                  <td id='tdAuthIndPhone2' class='tdEntry'></td>
                  <td id='tdAuthIndEmail2Label' class='tdHeading'>Email</td>
                  <td id='tdAuthIndEmail2' class='tdEntry'></td>
                </tr>
                <tr><td class='tdSpacing' colspan=4>&nbsp;</td></tr>
              </table>
            </p>
            <div style="padding-left:20px; display:flex; justify-content: center; text-align:justify; font-style: italic;">
              Registering to use ETT also means that in your official and personal capacities you have read and agree to the ETT Privacy Policy 
              [link] and consent to inclusion of your organization’s name, with or without its Authorized Individuals’ names and contact information 
              (as you reflect them above) on the ETT database and in ETT-related communications, factually stating that your organization is or was 
              registered to use ETT or is or was an ETT-registered entity (including but not limited to putting your organization’s name, with or without 
              its Authorized Individuals’ names and contact information, on a list of ETT-registered entities). Your organization’s name and Authorized 
              Individuals’ names will be removed from lists of then-current ETT-registered entities upon termination of your registration. 
              (ETT may be abbreviated or spelled out as Ethical Transparency Tool.)  Lists of ETT-registered entities (with or without their Authorized 
              Individuals names and contact information) may be used in recruiting additional entities to use ETT.  Any such reference will not include 
              an endorsement of ETT or state the specific way (within all the permitted ways) in which your organization is or was using ETT, without 
              your additional written consent.  Mere listing of your organization as an ETT-registered entity is not deemed an endorsement. 
              ETT may communicate aggregated data on the way Registered Entities use ETT.
            </div>
            <br>
            <hr style="margin-bottom: 30px;">
            <div style="font-style: italic;">
              <p>
                <sup>1</sup>Administrative Support Professional who assists and directly works with one or both of the Authorized Individuals, 
                is accustomed to maintaining confidential and sensitive information, and can administratively support the Registered Entity’s 
                use of ETT, including submitting requests for disclosures when directed by an Authorized Individual.                
              </p>                
              <p>
                <sup>2</sup>Person in a senior role that is accustomed to managing confidential and sensitive information, who will directly receive the 
                completed Disclosure Form information on behalf of the Requesting Registered Entity and will decide who at the Registered 
                Entity needs the information.                
              </p>                
              <p>
                <sup>3</sup>Ibid.                
              </p>                
            </div>
            <div style="justify-content: center; border-style:solid; padding:10px; padding-right:25px;">
              <div style="text-align: center; text-decoration: underline; font-weight: bold; padding-bottom: 10px;">
                IMPORTANT TERMS OF USE FOR ENTITIES REGISTERING TO USE ETT—Also at www.INSERT
              </div>
              <ol style="text-align: justify;">
                <li>
                  EACH REGISTERED ENTITY ACKNOWLEDGES THAT IT MUST MAKE INDEPENDENT DECISIONS AND POLICIES.  
                  ETT is just an automation tool that an ETT-Registered Entity can use, in its discretion, to get consents to disclosures of 
                  findings of misconduct about an individual and to make requests for disclosures to the entities that made or adopted findings.  
                  ETT does not receive any disclosures and does not dictate or guide decisions or policies, including, e.g., when to use ETT or 
                  who is qualified or should be selected for any honor, privilege, employment, or role.
                </li>
                <li>
                  Authorized Individuals should be in senior institutional roles, accustomed to managing sensitive and confidential information, 
                  and knowledgeable about the Registered Entity.  Administrative Support Professionals should also be accustomed to managing 
                  sensitive and confidential information.  A Registered Entity determines the individuals.
                </li>
                <li>
                  The Registered Entity’s Administrative Support Professional will be responsible for updating changes in who is an Authorized 
                  Individual or Administrative Support Professional.  However, to make a change effective, one of the two Authorized Individuals 
                  will need to confirm the change. 
                </li>
                <li>
                  The Administrative Support Professional may initiate Disclosure Requests in ETT only when directed by an Authorized Individual.  
                  Only Authorized Individuals should be the direct recipients of completed Disclosure Forms from other entities.  
                  Authorized Individuals will decide who within the Registered Entity needs the disclosed information (or will confer with the person who has that authority).  
                  Registered Entities create internal processes to satisfy all terms of use.
                </li>
                <li>
                  Completed Consent Forms, Affiliate Exhibit Forms, and Disclosure Forms must be used by a Registered Entity only in connection 
                  with Privilege(s) or Honor(s), Employment or Role(s)<sup>4</sup>.   
                </li>
                <li>
                  Registered Entities must not share completed Consent Forms, Affiliate Exhibit Forms, or Disclosure Forms that they receive with 
                  other entities (third parties). Registered Entities may access Consent Forms on ETT, while a Consent is in effect.
                </li>
                <li>
                  No warranties of any kind are made concerning ETT.  Each Registered Entity determines the uses of ETT that are operationally 
                  and legally appropriate for it and waives and releases all claims and liabilities of every kind (except intentional harm) that 
                  are associated with ETT, against the Societies Consortium on Sexual Harassment in STEMM, EducationCounsel LLC, the American 
                  Association for the Advancement of Science, and each designer, developer, host, sponsor, agent, contractor, administrator and/or 
                  operator of ETT (and their respective directors/trustees/managers/partners, members/stockholders, personnel, agents, contractors, 
                  and representatives).
                </li>
              </ol>
              <div style="text-align: center; border-style:solid; padding:10px; ">
                Check here
                <input id="chkRegisterEntity" type="checkbox" class="form-check-input" onclick="document.getElementById('btnRegisterEntitySubmit').disabled = !this.checked;"/>
                , type your name below, and submit, to digitally sign this Registration Form on behalf of the Registered Entity 
                and to agree to these terms, register, and confirm your authority to do so.
                <button id="btnRegisterEntitySubmit" class="btn btn-primary btn-lg" type="button" disabled>SUBMIT</button>
                <br><br>
                <div id="divTerminateEntity">
                  You may terminate your registration at any time 
                  <button id="btnTerminateEntity" class="btn btn-danger btn-lg" type="button">Terminate</button>                
                </div>
              </div>
            </div>
          </div>

          <!---------------------------------------------------->
          <!--         CONSENTER REGISTRATION SECTION         -->
          <!---------------------------------------------------->
          <div id="register-consenter-section" class="container-fluid py-5" style="display: none;">
            <h3 class="display-7 fw-bold">Individual Registration Form</h3>
            <p class="text-justify fs-4" style="text-align:justify;">
              <p style="font-weight: bold;">
                This Registration Form enables ETT to connect an individual and their Consent Form.
              </p>
              <p style="font-weight: bold;">
                Individual Registration and Initial Consent Form:
              </p>
              <div style="overflow: auto;">
                <div class="consenterFields">
                  <div class='tdHeading'>Full First<br>Name(s)*</div>
                  <div><input type="text" class="form-control" id="txtConsenterFirstName"></div>
                </div>
                <div class="consenterFields">
                  <div class='tdHeading'>Full Middle<br>Name(s)</div>
                  <div><input type="text" class="form-control" id="txtConsenterMiddleName"></div>
                </div>
                <div class="consenterFields">
                  <div class='tdHeading'>Full Last<br>Name(s)*</div>
                  <div><input type="text" class="form-control" id="txtConsenterLastName"></div>
                </div>
                <div class="consenterFields" style="padding-left:50px;">
                  <div class='tdHeading'>Email<br>Address*</div>
                  <div><input type="text" class="form-control" id="txtConsenterEmail"></div>
                </div>

                <div style="float:left; padding-top:20px;">
                  <p>
                    * Required field<br> 
                    Name, email and phone number will be used to authenticate your account.
                  </p>
                  <p style="font-weight: bold; font-style: italic;">
                    Registering on ETT means that you have read and agree to the ETT Privacy Policy [link] and 
                    <span style="color: red;">
                      consent to inclusion of your name (as you reflect it above) on the ETT database and in ETT-related communications made under the ETT process.  The Consent Form [link] provides information on how to rescind your Consent to disclosures.  When the period of your Consent expires—or when it is rescinded and ends for all purposes—your registration will also end automatically.
                    </span>
                  </p>
                  <div style="overflow: auto; min-height: 200px;">
                    <div style="float:left; max-width: 50%; text-align: right; font-weight: bold; border-right-style: solid; height:100%; padding:10px;">
                      To complete registration, type your name here as your Electronic Signature with the same effect as a handwritten signature:
                    </div>
                    <div style="float:left; padding:10px; overflow: auto; display:flex; align-items: center; height:100%;">
                      <input type="text" class="form-control" id="txtConsenterSignature" style="max-width: 200px; height:48px; float:left; margin-right:10px;">
                      <button id="btnRegisterConsenterSubmit" class="btn btn-primary btn-lg" style="float: left;" type="button" disabled>SUBMIT</button>
                    </div>
                  </div>
                </div>
              </div>


            </p>
          </div>
  
          <!---------------------------------------------------->
          <!--              LOGIN/SIGNUP SECTION              -->
          <!---------------------------------------------------->
          <div id="auth-section" class="container-fluid py-5" style="display: none">
            <h1 class="display-5 fw-bold" style="text-align:center">Welcome!</h1>
            <h1 class="display-8 fw-bold" style="text-align:center">Please log in:</h1>
            <p class="text-justify fs-4" style="text-align:justify;">ETT is designed to support AAU’s harassment prevention principles and the recommendations of NASEM’s June 2018 report on sexual harassment of women in academic science, engineering, and medicine by helping to create a norm of transparency about findings of misconduct against a person, across the higher-education and research ecosystem of societies, institutions of higher education, and other research organizations. This tool covers sexual, gender, and racial misconduct — as well as professional licensure, financial, and research misconduct to maximize its utility.</p>
            <div style="display:flex; justify-content: center;">
              <div class="outerButtonContainer">
                <div style="width:342px;">
                  <form id="formRole">
                    <label class="containerRDO">Hello World
                      <input type="radio" name="rdoRole" value="HELLO_WORLD" checked="checked">
                      <span class="checkmark"></span>
                    </label>
                    <label class="containerRDO">System Administrator
                      <input type="radio" name="rdoRole" value="SYS_ADMIN">
                      <span class="checkmark"></span>
                    </label>
                    <label class="containerRDO">Registered Entity Administrator
                      <input type="radio" name="rdoRole" value="RE_ADMIN">
                      <span class="checkmark"></span>
                    </label>
                    <label class="containerRDO">Authorized Individual
                      <input type="radio" name="rdoRole" value="RE_AUTH_IND">
                      <span class="checkmark"></span>
                    </label>
                    <label class="containerRDO">Consenting Person
                      <input type="radio" name="rdoRole" value="CONSENTING_PERSON">
                      <span class="checkmark"></span>
                    </label>
                    <button id="btnSignin" class="btn btn-primary btn-lg" type="button">Login</button>
                    &nbsp;
                    <button id="btnSignup" class="btn btn-primary btn-lg" type="button" style="display:none;">Signup</button>
                  </form>
                </div>
              </div>
            </div>
          </div>

          <!---------------------------------------------------->
          <!--                   APP SECTION                  -->
          <!---------------------------------------------------->
          <div id="app-section" class="container-fluid py-5" style="display:none">

            <!---------------------------------------------------->
            <!--                   HELLO_WORLD                  -->
            <!---------------------------------------------------->
            <div id="app-section-HELLO_WORLD" style="display:none">
              <center>
                <p class="fs-4">Welcome, <span id="HELLO_WORLD_username"></span>!</p>
                <p class="fs-4" id="apiDescription"></p>
                <p><button id="btnPingApi" class="btn btn-primary btn-lg" type="button">Ping the API</button></p>
              </center>            
            </div>


            <!---------------------------------------------------->
            <!--                    SYS_ADMIN                   -->
            <!---------------------------------------------------->
            <div id="app-section-SYS_ADMIN" style="display:none;">
              <ul class="nav nav-tabs" id="sysAdmin" role="tablist">
                <li class="nav-item">
                  <a class="nav-link active" id="sys-admin-invitation-tab" data-toggle="tab" href="#sys-admin-invitation" role="tab" aria-controls="sys-admin-invitation" aria-selected="false">Invitation</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" id="sys-admin-db-tab" data-toggle="tab" href="#sys-admin-db" role="tab" aria-controls="sys-admin-db" aria-selected="false">Database</a>
                </li>
              </ul>
              <div class="tab-content" id="sysAdminContent">
                <div class="tab-pane fade show active" id="sys-admin-invitation" role="tabpanel" aria-labelledby="sys-admin-invitation-tab">
                  <h3 class="display-7 fw-bold">Welcome <span id="SYS_ADMIN_username"></span></h3>
                  <h3 class="display-7 fw-bold">Invite a participant</h3>
                  <div style="display:inline-block; width:405px;">
                    <div>
                      <div class="divSysAdminOption">
                        Another System Administrator:&nbsp;
                        <input type="radio" name="rdoSysAdminInvite" value="SYS_ADMIN">
                      </div>
                      <div class="divSysAdminOption">
                        A Registered Entity Administrator:&nbsp;
                        <input type="radio" name="rdoSysAdminInvite" value="RE_ADMIN">
                      </div>
                      <div class="divSysAdminOption">
                        An Authorized Individual:&nbsp;
                        <input type="radio" name="rdoSysAdminInvite" value="RE_AUTH_IND">
                      </div>
                    </div>
                    <div id="divSysAdminEmailToInvite" class="divSysAdminOption" style="text-align: right;">
                      Email Address:
                      <input id="txtSysAdminEmailToInvite" type="text" class="form-control" style="width:fit-content; display:inline-block;">
                    </div>                
                    <div id="divSysAdminEntities" class="divSysAdminOption" style="text-align: right;">
                      Entity:
                      <select id="lbxSysAdminEntities" class="form-control" style="width:fit-content; display:inline-block;">
                        <option><-- Select One --></option>
                      </select>
                    </div>                
                    <div class="divSysAdminOption">
                      <button id="btnSysAdminInvite" class="btn btn-primary btn-lg" type="button">Invite</button>
                    </div>
                  </div>
                </div>
                <div class="tab-pane fade" id="sys-admin-db" role="tabpanel" aria-labelledby="sys-admin-db-tab">
                  <h3 class="display-7 fw-bold" style="text-align:center; margin-bottom: 20px;">ETT database viewer</h3>
                  <div style="overflow:auto;">
                    <div style="float:left; clear:both; margin-bottom: 30px;">
                      <div class="dbTableLabel">Entities</div>
                      <button class="btn btn-primary btn" type="button" onclick="refreshDbTable('entities')">Load/Refresh</button>
                      <div id="db-table-entities" style="margin-top:10px;"></div>
                    </div>
                    <div style="float:left; clear:both; margin-bottom: 30px;">
                      <div class="dbTableLabel">Invitations</div>
                      <button class="btn btn-primary btn" type="button" onclick="refreshDbTable('invitations')">Load/Refresh</button>
                      <div id="db-table-invitations" style="margin-top:10px;"></div>
                    </div>
                    <div style="float:left; clear:both; margin-bottom: 30px;">
                      <div class="dbTableLabel">Users</div>
                      <button class="btn btn-primary btn" type="button" onclick="refreshDbTable('users')">Load/Refresh</button>
                      <div id="db-table-users" style="margin-top:10px;"></div>
                    </div>
                    <div style="float:left; clear:both;">
                      <div class="dbTableLabel">Consenters</div>
                      <button class="btn btn-primary btn" type="button" onclick="refreshDbTable('consenters')">Load/Refresh</button>
                      <div id="db-table-consenters" style="margin-top:10px;"></div>
                    </div>
                  </div>
                </div>
              </div>
            </div>


            <!---------------------------------------------------->
            <!--                    RE_ADMIN                    -->
            <!---------------------------------------------------->
            <div id="app-section-RE_ADMIN" style="display:none">
              <ul class="nav nav-tabs" id="reAdmin" role="tablist">
                <li class="nav-item">
                  <a class="nav-link active" id="re-admin-entity-link" data-toggle="tab" href="#re-admin-entity" role="tab" aria-controls="re-admin-entity" aria-selected="true">Entity/Organization</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" id="re-admin-misc-link" data-toggle="tab" href="#re-admin-misc" role="tab" aria-controls="re-admin-misc" aria-selected="false">Miscellaneous</a>
                </li>
              </ul>
              <h3 class="display-7 fw-bold">Welcome <span id="RE_ADMIN_username"></span></h3>
              <div class="tab-content" id="reAdminContent">
                <div class="tab-pane fade show active" id="re-admin-entity" role="tabpanel" aria-labelledby="re-admin-entity-link">
                  <div id="divCreateEntity">
                    <h5 class="display-7 fw-bold" style="text-align:center;">Create your entity and invite authorized individuals</h5>
                    <div id="divReAdminEntityName" class="divSysAdminOption" style="text-align: right;">
                      Entity Name:
                      <input id="txtReAdminEntityName" type="text" class="form-control" style="width:fit-content; display:inline-block;">
                      <button id="btnReAdminEntityUpdate" class="btn btn-primary" type="button">Update</button>
                    </div>
                    <div id="divReAdminEmailToInvite" class="divSysAdminOption" style="text-align: right;">
                      <div style="padding: 20px;">
                        Authorized Individual Invitee Email Addresses
                      </div>                
                      Email 1:
                      <input id="txtReAdminEmailToInvite1" type="text" class="form-control" style="width:fit-content; display:inline-block;">
                    </div>                
                    <div id="divReAdminEmailToInvite" class="divSysAdminOption" style="text-align: right;">
                      Email 2:
                      <input id="txtReAdminEmailToInvite2" type="text" class="form-control" style="width:fit-content; display:inline-block;">
                    </div>                
                    <div class="divSysAdminOption">
                      <button id="btnReAdminInvite" class="btn btn-primary btn-lg" type="button">Create and Invite</button>
                    </div> 
                  </div>                  
                </div>
                <div class="tab-pane fade" id="re-admin-misc" role="tabpanel" aria-labelledby="re-admin-misc-link">
                  <h3 class="display-7 fw-bold" style="text-align:center; margin-bottom: 20px;">Something else can go here, not sure what</h3>
                </div>
              </div>
            </div>


            <!---------------------------------------------------->
            <!--                  RE_AUTH_IND                   -->
            <!---------------------------------------------------->
            <div id="app-section-RE_AUTH_IND" style="display:none">
              <h3 class="display-7 fw-bold">Welcome <span id="RE_AUTH_IND_username"></span></h3>
              <h3 class="display-7 fw-bold">Authorized Individual</h3>

              <!-- Temporarily hiding this block -->
              <div style="display:none;">
                <div class="d-inline-block" style="width:fit-content;">
                  <nav aria-label="Page navigation example " style="width:fit-content;">
                    <ul class="pagination pagination-lg fw-bold" style="width:fit-content" >
                      <li class="page-item"><a class="page-link" href="#">Previous</a></li>
                      <li class="page-item"><a class="page-link" href="#">1</a></li>
                      <li class="page-item"><a class="page-link" href="#">2</a></li>
                      <li class="page-item"><a class="page-link" href="#">3</a></li>
                      <li class="page-item"><a class="page-link" href="#">Next</a></li>
                    </ul>
                  </nav>
                </div>
                <div id="divAuthIndFilter" class="container d-inline-block fw-bold p-2" style="width:fit-content" >
                  Filters:&nbsp;
                  <input type="checkbox" class="btn-check" id="chkAuthIndFilter1" autocomplete="off">
                  <label class="btn btn-outline-dark" for="chkAuthIndFilter1">All Consenting<br>Individuals</label>
                  <input type="checkbox" class="btn-check" id="chkAuthIndFilter2" autocomplete="off" checked>
                  <label class="btn btn-outline-dark" for="chkAuthIndFilter2">Needing Exhibit<br>Form Request</label>
                  <input type="checkbox" class="btn-check" id="chkAuthIndFilter3" autocomplete="off">
                  <label class="btn btn-outline-dark" for="chkAuthIndFilter3">Pending Exhibit<br>Form Delivery</label>
                  <input type="checkbox" class="btn-check" id="chkAuthIndFilter4" autocomplete="off">
                  <label class="btn btn-outline-dark" for="chkAuthIndFilter4">Needing Disclosure<br>Request</label>
                  <input type="checkbox" class="btn-check" id="chkAuthIndFilter5" autocomplete="off">
                  <label class="btn btn-outline-dark" for="chkAuthIndFilter5">Pending Disclosure<br>Delivery</label>
                  <input type="checkbox" class="btn-check" id="chkAuthIndFilter6" autocomplete="off">
                  <label class="btn btn-outline-dark" for="chkAuthIndFilter6">Disclosures<br>Delivered</label>
                </div>

                <div id="john_doe">
                  <div class="container-fluid bg-success bg-opacity-25 fw-bold">
                    John Doe
                  </div>
                  <div class="container-fluid border border-success border-opacity-25 text-center">
                    <div class="row align-items-start p-2 fw-bold">
                      <div id="stage" class="stage col bg-success p-2 text-dark bg-opacity-25">
                        <div class="idiv" style="float: left;"><i class="bi-1-circle"></i></div>
                        <div class="idiv">
                          <div class="idiv"><i class="bi-send-check"></i></div> 
                          <div class="idiv">Exhibit Form Requests</div>                                  
                        </div>
                      </div>
                      <div id="stage" class="col stage bg-success p-2 text-dark bg-opacity-50">
                        <div class="idiv" style="float: left;"><i class="bi-2-circle"></i></div>
                        <div class="idiv">
                          <div class="idiv"><i class="bi-envelope-check"></i></div> 
                          <div class="idiv">Exhibit Forms Delivered</div>                                  
                        </div>
                      </div>
                      <div id="stage" class="col stage bg-success p-2 text-white bg-opacity-75">
                        <div class="idiv" style="float: left;"><i class="bi-3-circle"></i></div>
                        <div class="idiv">
                          <div class="idiv"><i class="bi-send-check"></i></div> 
                          <div class="idiv">Disclosures Requested</div>                                  
                        </div>
                      </div>
                      <div id="stage" class="col stage bg-success p-2 text-white">
                        <div class="idiv" style="float: left;"><i class="bi-4-circle"></i></div>
                        <div class="idiv">
                          <div class="idiv"><i class="bi-envelope-check"></i></div> 
                          <div class="idiv">Disclosures Delivered</div>                                  
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <script>
                  document.write(document.getElementById('john_doe').outerHTML.replace('John Doe', 'Bugs Bunny'));
                  document.write(document.getElementById('john_doe').outerHTML.replace('John Doe', 'Daffy Duck'));
                  document.write(document.getElementById('john_doe').outerHTML.replace('John Doe', 'Porky Pig'));
                  document.write(document.getElementById('john_doe').outerHTML.replace('John Doe', 'Yosemite Sam'));
                  document.write(document.getElementById('john_doe').outerHTML.replace('John Doe', 'Wile E. Coyote'));
                  document.write(document.getElementById('john_doe').outerHTML.replace('John Doe', 'Foghorn Leghorn'));
                </script>
              </div>


            </div>


            <!---------------------------------------------------->
            <!--               CONSENTING_PERSON                -->
            <!---------------------------------------------------->
            <div id="app-section-CONSENTING_PERSON" style="display:none">
              <div style="font-weight: bold; position: relative; top: -40px;">Welcome <span id="CONSENTING_PERSON_username">[Insert Username]</span></div>
              <div style="overflow:auto">
                <ul class="nav nav-tabs" id="consenter" role="tablist">
                  <li class="nav-item">
                    <a class="nav-link active" id="consenter-consent-link" data-toggle="tab" href="#consenter-consent" role="tab" aria-controls="consenter-consent" aria-selected="true">Your Consent</a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" id="consenter-exhibit-link" data-toggle="tab" href="#consenter-exhibit" role="tab" aria-controls="consenter-exhibit" aria-selected="false">Exhibit Form Submission</a>
                  </li>
                </ul>
                <div class="tab-content" id="consenterContent">
                  <div class="tab-pane fade show active" id="consenter-consent" role="tabpanel" aria-labelledby="consenter-consent-link">
                    <h3 class="display-7 fw-bold">ETT Consent Form</h3>
                    <div id="divConsenterConsent" class="divSysAdminOption" style="overflow: auto; width:100%">
                      <p style="text-align: left;">
                        <b>A. FUNDAMENTAL PRINCIPLES (<span id='consent-tooltip-1' data-toggle="tooltip">Principles</span>):</b><br>
                        <span id='entityName1'>[Insert entity name]</span> is committed to providing a climate and culture where all are welcome and able to thrive, for the sake of our community members and to advance our integrity, excellence, and earned public trust. While people found responsible for misconduct may learn lessons, change conduct, and regain trust, transparency is important.  Not knowing about findings of sexual, gender, and racial/ethnic misconduct, along with certain other types of misconduct, prevents us from achieving the climate and culture we value. <b>(Hover on underlined terms in this form for definitions.)</b>
                      </p>
                      <p style="text-align: left;">
                        <b>B. GIVE YOUR CONSENT:</b><br>
                        This <span id='consent-tooltip-0' data-toggle="tooltip">Consent Form</span> is part of the <span id='consent-tooltip-0' data-toggle="tooltip">Ethical Transparency Tool</span>, which is a tool to advance the <span id='consent-tooltip-1' data-toggle="tooltip">Principles</span>.<br>
                        As a condition to being considered by [insert entity name] for <span id='consent-tooltip-2' data-toggle="tooltip">Privileges or Honors</span>, <span id='consent-tooltip-3' data-toggle="tooltip">Employment or Roles</span>, now or in the future, and by submitting this <span id='consent-tooltip-2' data-toggle="tooltip">Consent Form</span>, I give my consent to any <span id='consent-tooltip-4' data-toggle="tooltip">Consent Recipient(s)</span> to complete a <span id='consent-tooltip-5' data-toggle="tooltip">Disclosure Form</span> about me and to provide it to any <span id='consent-tooltip-6' data-toggle="tooltip">ETT-Registered Entit(ies)</span> that make(s) a request during the life of this Consent Form.
                      </p>
                      <div style="border-style:solid; border-width:4px; border-color:rgb(84, 123, 196); padding:20px; text-align: left;">
                        <span id='consent-tooltip-4' data-toggle="tooltip">Consent Recipient(s)</span> are my :
                        <ol style="margin-top: 10px;">
                          <li style="margin-top: 5px;">Current employers and former employers (the look-back period for former employers will be determined by each <span id='consent-tooltip-6' data-toggle="tooltip">ETT-Registered Entity</span> at the time it uses this Consent Form to request a disclosure);</li>
                          <li style="margin-top: 5px;">Current and former academic, professional, and field-related honorary and membership societies and organizations (same look-back period as in #1);</li>
                          <li style="margin-top: 5px;">Current and former entities and organizations where I have or had emeritus/emerita, visiting, or other teaching, research, or administrative appointments or that have given me an honor or award (same look-back period as in #1); and</li>
                          <li style="margin-top: 5px;">The entities and organizations where I have any of the above-listed kinds of affiliations in the future.</li>
                        </ol>  
                      </div>
                      <p style="text-align: left; margin-top:20px;">
                        To provide an up-to-date list, <b>I will submit <span id='consent-tooltip-4' data-toggle="tooltip">Exhibit Forms</span> listing the name and a contact for each of my Consent Recipients each time any <span id='consent-tooltip-6' data-toggle="tooltip">ETT-Registered Entity</span></b> makes a request.  (See Process Diagram.) 
                        <span id='consent-tooltip-0' data-toggle="tooltip">This Consent Form</span>, any <span id='consent-tooltip-4' data-toggle="tooltip">Exhibit Forms</span> and any completed <span id='consent-tooltip-5' data-toggle="tooltip">Disclosure Form</span> about me may only be used in connection with <span id='consent-tooltip-2' data-toggle="tooltip">Privileges or Honors</span> and <span id='consent-tooltip-5' data-toggle="tooltip">Employment or Roles</span>.  Other policies or laws may provide for additional disclosures (beyond those covered by the <span id='consent-tooltip-0' data-toggle="tooltip">Ethical Transparency Tool</span>).
                      </p>

                      <hr style="width:90%; margin-top:50px;" />

                      <div style="margin-top:50px; text-align: left;">
                        <b>To the maximum extent that law allows me to knowingly give a waiver/release:</b>
                        <div>
                          <ol>
                            <li style="margin-top:20px;">
                              <b>I waive any non-disclosure, non-disparagement, confidentiality and other limitations that would otherwise apply to a completed <span id='consent-tooltip-5' data-toggle="tooltip">Disclosure Form</span> about me which are imposed by —</b>
                              <ul>
                                <li>any current or future agreement or</li>
                                <li>any law or policy in effect when a completed <span id='consent-tooltip-5' data-toggle="tooltip">Disclosure Form</span> is provided; </li>
                              </ul>
                              <b><br>and</b>
                            </li>
                            <li style="margin-top:20px;">
                              <b>I waive and release all claims and liabilities of every kind, that are associated with this <span id='consent-tooltip-0' data-toggle="tooltip">Consent Form</span>, any <span id='consent-tooltip-4' data-toggle="tooltip">Exhibit Forms</span>, or the disclosures and use of disclosures to which I am consenting, against any <span id='consent-tooltip-4' data-toggle="tooltip">Consent Recipient(s)</span>, <span id='consent-tooltip-6' data-toggle="tooltip">ETT-Registered Entit(ies)</span>, and/or developer(s), host(s), administrator(s), operator(s), governing bodies, sponsor(s), or advisor(s) for the <span id='consent-tooltip-0' data-toggle="tooltip">Ethical Transparency Tool</span></b> (and their respective prior, current, and future directors/trustees/managers, officers, partners/members/stockholders, personnel, agents, and representatives).
                            </li>
                          </ol>
                        </div>
                      </div>
                      <div style="border-style:solid; border-width:4px; border-color:rgb(84, 123, 196); padding:20px; text-align: left; font-weight: bold;">
                        This <span id='consent-tooltip-0' data-toggle="tooltip">Consent Form</span> will expire in 10 years (after the date I submit it) unless I renew it.  I may rescind this <span id='consent-tooltip-0' data-toggle="tooltip">Consent Form</span> by clicking on the link below — the link explains one exception.
                      </div>
                      <p style="text-align: left; margin-top:50px;">
                        I agree that a copy of this <span id='consent-tooltip-0' data-toggle="tooltip">Consent Form</span> may be given at any time to any <span id='consent-tooltip-4' data-toggle="tooltip">Consent Recipient(s)</span> and <span id='consent-tooltip-6' data-toggle="tooltip">ETT-Registered Entit(ies)</span>. I agree that this electronic <span id='consent-tooltip-0' data-toggle="tooltip">Consent Form</span>, my electronic (digital) signature, and any copy will have the same effect as originals for all purposes. <b>I have read this <span id='consent-tooltip-0' data-toggle="tooltip">Consent Form</span> (including the definitions) and read and agree to the ETT Privacy Policy [link]. I have had the time to consider and consult anyone I wish on whether to provide this <span id='consent-tooltip-0' data-toggle="tooltip">Consent Form</span>.  I am at least 18 years old and it is my knowing and voluntary decision to sign and deliver this <span id='consent-tooltip-0' data-toggle="tooltip">Consent Form</span>.</b>
                      </p>

                      <hr style="width:90%; margin-top:50px; margin-bottom: 50px;" />
                      
                      <div id="consentFieldSet" style="overflow: auto;">
                        <div class="consenterFields" style="min-width: 300px;">
                          <div class='tdHeading'>Full Name<br><span style="font-size: 10px;">(first, middle, last)</span></div>
                          <div><input type="text" class="form-control" id="txtConsentFullname"></div>
                        </div>
                        <div class="consenterFields">
                          <div class='tdHeading'>Email<br>Address</div>
                          <div><input type="text" class="form-control" id="txtConsentEmail"></div>
                        </div>
                        <div class="consenterFields">
                          <div class='tdHeading'>Cell<br>Phone</div>
                          <div><input type="text" class="form-control" id="txtConsentPhone"></div>
                        </div>      
                        <div style="float:left; padding-top:20px;">
                          <div style="overflow: auto; min-height: 200px;">
                            <div style="float:left; max-width: 50%; text-align: right; font-weight: bold; border-right-style: solid; height:100%; padding:10px;">
                              Please type your full name (First Middle Last) to digitally sign this Consent Form:
                            </div>
                            <div style="float:left; padding:10px; overflow: auto; display:flex; align-items: center; height:100%;">
                              <input type="text" class="form-control" id="txtConsentSignature" style="max-width: 200px; height:48px; float:left; margin-right:10px;">
                              <button id="btnRegisterConsentSubmit" class="btn btn-primary btn-lg" style="float: left;" type="button" disabled>SUBMIT</button>
                            </div>
                          </div>
                        </div>                        
                      </div>

                      <div id="consentOptions" style="float:left; clear: both; overflow: auto;">
                        <p id="consentTimestamp" style="font-weight:bold; text-align:left;"></p>
                        <div id="consentRescind" style="width:215px; float:left; overflow: auto; padding: 10px; margin-right:35px; background-color: #ffe6e6;">
                          <div style="margin-right: 5px; float:left; text-align: center;">
                            To rescind this Consent Form (or review the exception), click
                            <!-- Button trigger modal -->
                            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#rescindBackdrop" style="margin-top:6px;">RESCIND</button>
                            <!-- Modal -->
                            <div class="modal fade" id="rescindBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="rescindBackdropLabel" aria-hidden="true">
                              <div class="modal-dialog  modal-dialog-scrollable">
                                <div class="modal-content">
                                  <div class="modal-header">
                                    <h5 class="modal-title" id="rescindBackdropLabel">Rescinding Consent</h5>
                                  </div>
                                  <div class="modal-body" style="text-align:left;">
                                    <p>
                                      Even if your Consent otherwise expires or is otherwise rescinded, your Consent Form will 
                                      remain in effect- while you are  being considered for a particular Employment or Role, 
                                      Honor or Privilege for the purpose of - and for as long as it takes  for - all requested 
                                      disclosures about you to be made if:<br>                                      
                                    </p>
                                    <p>
                                      <b>(1)</b> You submit ETT Exhibit Forms <span style="font-style: italic;">(listing your professional affiliations who will be 
                                      asked for disclosures)</span>                                      
                                    </p>
                                    <p>
                                      and...
                                    </p>
                                    <p>
                                      <b>(2)</b> the ETT-Registered Entity that is considering you timely directs ETT to issue requests
                                      for disclosures. <span style="font-style: italic;">(The Exhibit Form includes your agreement to this continued life.)</span>
                                    </p>
                                  </div>
                                  <div class="modal-footer">
                                    <button id="btnRescindConsent" class="btn btn-primary" data-bs-dismiss="modal">Rescind & Close</button>
                                    &nbsp;
                                    <button class="btn btn-primary" data-bs-dismiss="modal">Cancel</button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>                                                 
                        </div>
                        <div id="consentRenew" style="width:215px; float:left; overflow: auto; vertical-align: middle; margin-right:4px; padding:10px; background-color: #e6e6ff;">
                          <div style="margin-right: 5px; float:left; text-align: center;">
                            To renew this Consent Form for another 10 years click<br>
                            <button id="btnRenewConsent" class="btn btn-primary" style="margin-top:6px;">RENEW</button>
                          </div>                                                 
                        </div>
                        <div id="consentCorrect" style="width:215px; float:left; overflow: auto; vertical-align: middle; margin-right:4px; padding:10px; background-color: #e6e6ff;">
                          <div style="margin-right: 5px; text-align: center;">
                            To correct this Consent Form, click<br><br>
                            <!-- Button trigger modal -->
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#correctBackdrop" style="margin-top:6px;">CORRECT</button>
                            <!-- Modal -->
                            <div class="modal fade" id="correctBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="correctBackdropLabel" aria-hidden="true">
                              <div class="modal-dialog  modal-dialog-scrollable">
                                <div class="modal-content">
                                  <div class="modal-header">
                                    <h5 class="modal-title" id="correctBackdropLabel">Edit your Consent</h5>
                                  </div>
                                  <div class="modal-body" style="text-align:left; overflow:auto;">
                                    <div style="clear:both; margin-top:10px;">Full Name <span style="font-size: 10px;">(first, middle, last)</span></div>
                                    <div><input type="text" class="form-control" id="txtConsentEditFullname"></div>
                                    <div style="clear:both; margin-top:10px;">Email Address</div>
                                    <div><input type="text" class="form-control" id="txtConsentEditEmail"></div>
                                    <div style="clear:both; margin-top:10px;">Cell Phone</div>
                                    <div><input type="text" class="form-control" id="txtConsentEditPhone"></div>
                                    <div style="clear:both; margin-top:10px;">Please type your full name <span style="font-size: 10px;">(first, middle, last)</span> to digitally sign this Consent Form:</div>
                                    <div><input type="text" class="form-control" id="txtConsentEditSignature"></div>
                                  </div>
                                  <div class="modal-footer">
                                    <button id="btnCorrectConsent" class="btn btn-primary" data-bs-dismiss="modal">CORRECT</button>
                                    &nbsp;
                                    <button class="btn btn-primary" data-bs-dismiss="modal">Cancel</button>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>                                                 
                        </div>
                        <div id="consentSend"  style="width:215px; float:left; overflow: auto; vertical-align: middle; padding:10px; background-color: #e6e6ff;">
                          <div style="margin-right: 5px; text-align: center;">
                            Send a pdf copy of this<br>consent form to<br>
                            <span id="consentSendEmail">yourself</span>, click<br>
                            <button id="btnSendConsent" class="btn btn-primary" style="margin-top:6px;">SEND</button>
                          </div>
                        </div>
                      </div>                  
                    </div>
                  </div>

                  <div class="tab-pane fade" id="consenter-exhibit" role="tabpanel" aria-labelledby="consenter-exhibit-link" style="overflow:auto;">
                    <h3 class="display-7 fw-bold">Full Exhibit Form - Consent Recipients/Affiliates</h3>

                    <p style="margin-top:40px; margin-bottom:40px;">
                      <b>This Full Exhibit Form is incorporated into my Consent Form, at link. This Exhibit Form provides an up-to-date 
                      list of the names and contacts for my known Consent Recipients on the date of this Exhibit. The definitions 
                      in the Consent Form also apply to this Full Exhibit Form.</b> My known Consent Recipient(s) are listed below: 
                    </p>

                    <div style="float:left; clear:both; overflow:auto;">
                      <div style="float:left; margin-right:10px; text-align: right;" ><span id='exhibit-tooltip-0' data-toggle="tooltip">Requesting<br>Organizations/Entities</span></div>
                      <div style="float:left;">
                        <select id="lbxRequestingEntity" class="form-control" style="width:300px; height:48px; margin-right: 10px;">
                          <option><- Select One -></option>
                          <option value="bu">Boston University</option>
                          <option value="tu">Tufts University</option>
                          <option value="nu">Northeastern University</option>
                        </select>
                      </div>
                    </div>

                    <div style="float:left; clear:both; margin-top: 20px; overflow: auto;">
                      <table id="tblPoc">
                        <thead>
                          <tr>
                            <td colspan="2">Organization</td>
                            <td colspan="5">Point of Contact</td>
                          </tr>
                          <tr>
                            <td>Name (No acronyms) </td>
                            <td><span id='exhibit-tooltip-1' data-toggle="tooltip">Type</span></td>
                            <td>Name (First and Last Name)</td>
                            <td>Job Title</td>
                            <td>Email</td>
                            <td>Phone Number</td>
                            <td style="width:fit-content; width:1px;">&nbsp;</td>
                          </tr>
                        </thead>
                        <tbody id="tbPoc">
                          <tr id="trPoc">
                            <td><input id="org-name" type="text" class="form-control"></td>
                            <td>
                              <span id='exhibit-tooltip-1' data-toggle="tooltip">
                                <select id="org-type" class="form-control">
                                  <option><- Select One -></option>
                                  <option value="employer">1) Employers</option>
                                  <option value="academic">2) Academic / Professional Societies & Organizations</option>
                                  <option value="other">3) Other Affiliated Organizations</option>
                                </select>
                              </span>
                            </td>
                            <td><input id="poc-name" type="text" class="form-control"></td>
                            <td><input id="poc-title" type="text" class="form-control"></td>
                            <td><input id="poc-email" type="text" class="form-control"></td>
                            <td><input id="poc-phone" type="text" class="form-control"></td>
                            <td style="width:fit-content;">
                              <span id='exhibit-tooltip-2' data-toggle="tooltip">
                                <button id="btnAddPoc" class="btn btn-primary btn-sm" type="button" style="width:68px;" onclick="changePoc('add')">Add</button>                                
                              </span>
                              <span id='exhibit-tooltip-3' data-toggle="tooltip">
                                <button id="btnRemovePoc" class="btn btn-primary btn-sm" type="button" style="width:68px; margin-top:4px;"  onclick="changePoc('remove')">Remove</button>                                
                              </span>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                      <hr style="width:90%; margin-top:50px; margin-bottom: 50px;" />
                    </div>

                    <div style="float:left; clear:both; ">
                      <p style="font-weight:bold;">I direct the Ethical Transparency Tool (“ETT”) to do the following and consent to it doing so: </p>
                      <div style="margin-top: 10px;">
                        <ol>
                          <li>
                            <p style="font-weight:bold;">
                              Transmit this “Full Exhibit Form” and my accompanying “Single-Entity Exhibit Forms” on my behalf to my private page on ETT.
                            </p>                            
                          </li>
                          <li>
                            <p>
                              <b>Also transmit this Full Exhibit Form on my behalf to <span id="spanRequestingEntity">[INSERT NAME]</span></b>, which is the ETT-Registered 
                              Entity that requested it (“Registered Entity”) in connection with considering me for a Privilege or 
                              Honor, Employment or Role
                            </p>
                          </li>
                          <li>
                            <p>
                              <b>Within the next 60 days—if the Registered Entity initiates transmittals via ETT to my Consent 
                              Recipients, asking them to complete Disclosure Forms about me (“Disclosure Requests”), transmit 
                              the Disclosure Requests</b> (including the relevant <b>Single-Entity Exhibit Form</b>, my Consent Form, and a 
                              blank Disclosure Form), copying the Registered Entity. <b>I agree that my Consent Form will remain in 
                              effect for use with Disclosure Forms provided in response to these Disclosure Requests (even if my 
                              Consent would otherwise expire or is rescinded)</b>.
                            </p>
                            <p>
                              <b>Within the 21 days after sending the initial Disclosure Requests—resend the Registered Entity’s 
                              Disclosure Requests twice (as reminders) to my Consent Recipients, copying the Registered Entity. 
                              Then promptly delete all of my Exhibit Forms from ETT (as ETT will have completed its transmittal 
                              role).</b>
                            </p>
                          </li>
                          <li>
                            <p>
                              If the Registered Entity does not initiate Disclosure Requests within this 60-day period, delete all of 
                              my Exhibit Forms from ETT.
                            </p>
                          </li>
                        </ol>
                      </div>
                    </div>

                    <div style="float:left; clear:both; margin-top:30px; margin-bottom:30px;">
                      I agree that this electronic Full Exhibit Form and my electronic (digital) signature, and any copy will have the 
                      same effect as originals for all purposes. <b>I have had the time to consider and consult anyone I wish on whether 
                      to provide this Full Exhibit Form. I am at least 18 years old and it is my knowing and voluntary decision to 
                      sign and deliver this Full Exhibit Form.</b>
                    </div>

                    <div style="float:left; clear:both;">
                      <div style="overflow: auto;">
                        <div style="float:left; max-width: 50%; text-align: right; font-weight: bold; font-style: italic; border-right-style: solid; height:100%; padding:10px;">
                          Please type your full name (First Middle Last) to digitally sign this Exhibit Form:
                        </div>
                        <div style="float:left; padding:10px; overflow: auto; display:flex; align-items: center; height:100%;">
                          <input type="text" class="form-control" id="txtExhibitSignature" style="max-width: 200px; height:48px; float:left; margin-right:10px;">
                        </div>
                      </div>
                    </div>
                    <div class="consenterFields" style="min-width: 300px; clear:both;">
                      <div class='tdHeading'>Full Name<br><span style="font-size: 10px;">(first, middle, last)</span></div>
                      <div><input type="text" class="form-control" id="txtExhibitFullname"></div>
                    </div>
                    <div class="consenterFields">
                      <div class='tdHeading'>Email<br>Address</div>
                      <div><input type="text" class="form-control" id="txtExhibitEmail"></div>
                    </div>
                    <div class="consenterFields">
                      <div class='tdHeading'>Cell<br>Phone</div>
                      <div><input type="text" class="form-control" id="txtExhibitPhone"></div>
                    </div>      

                    <div style="display:flex; flex-direction: row; overflow: auto; justify-content: flex-start; float:left; clear:both; margin-top:40px; width:100%;">
                      <button id="btnExhibitNext" class="btn btn-danger btn-lg" style="margin-right:8px;" type="button">NEXT</button>
                      <span style="font-style: italic; font-weight: bold;">
                        Click the Next button to create, review, and sign a Single-Entity Exhibit Form for each of your listed consent 
                        Recipients. You will not be able to submit any of your Exhibit Forms until you digitally sign all of them.
                      </span> 
                    </div>                                      
                  </div>
                </div>
              </div>
          </div>

          <!-- Signout button -->
          <p>&nbsp;</p>              
          <p>&nbsp;</p>              
          <p>&nbsp;</p>              
          <p>&nbsp;</p>              
          <div>
            <button id="btnSignout" type="button" class="btn btn-danger">Sign out</button>           
          </div>
        </div>

        <!-- Footer -->
        <footer class="pt-3 mt-4 text-muted border-top">
          <span class="footer">&copy; 2023</span>              
        </footer>

        <!-- Vertical spacer -->
        <div class="container-fluid py-5" style="height:200px;">&nbsp;</div>

        <!-- Display area for api response message (mostly errors) -->
        <div id="apiResponse"></div>
      </div>
    </main>

  <script>

    const STATIC_PARAMETERS = 'STATIC_PARAMETERS_PLACEHOLDER';
    
    const localTesting = () => /^STATIC_PARAMETERS_.*$/.test(STATIC_PARAMETERS);

    const roleChange = () => {
      selected_role = document.forms['formRole']['rdoRole'].value;
      var desc = document.getElementById('apiDescription');
      document.getElementById('btnSignup').style.display = 'none';
      switch(selected_role) {
        case 'HELLO_WORLD':
          desc.innerHTML = 'Simple API to get a hello message'; break;
        case 'SYS_ADMIN':
          desc.innerHTML = 'API to get a list of registered entities'; break;
        case 'RE_ADMIN':
          desc.innerHTML = 'API to the names of all registered entity staff'; break;
        case 'RE_AUTH_IND':
          desc.innerHTML = 'API to view any consenting persons who signed up with the registered entity'; break;
        case 'CONSENTING_PERSON':
          desc.innerHTML = 'API to fill out a consent form';
          document.getElementById('btnSignup').style.display = 'inline';
          break;
      }
    }

    let IDJwtCookie;
    let AccessJwtCookie;
    let RefreshJwtCookie;

    const getSelectedRole = () => {
      let role = new URL(document.location.href).searchParams.get('selected_role');
      if(role) return role;
      if(AccessJwtCookie && !AccessJwtCookie.jwtExpired()) {
        role = AccessJwtCookie.getRole()?.name;
        if(role) return role;
      }
      return document.forms['formRole']['rdoRole'].value;
    }

    let selected_role = getSelectedRole();

    let userContext = {};

    const rdoRoles = document.getElementsByName('rdoRole');
    rdoRoles.forEach(rdoRole => {
      rdoRole.addEventListener('change', roleChange);
    });

    const clientId = () => { return STATIC_PARAMETERS.ROLES[selected_role].CLIENT_ID; }
    const redirectUri = () => { return STATIC_PARAMETERS.ROLES[selected_role].REDIRECT_URI; }
    const apiUri = () => { return STATIC_PARAMETERS.ROLES[selected_role].API_URI; }
    let invitation;

    /**
     * Generate a code verifier
     */
    function generateCodeVerifier() {
      const codeVerifierLength = 64;
      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';
      let codeVerifier = '';

      for (let i = 0; i < codeVerifierLength; i++) {
        const randomIndex = Math.floor(Math.random() * chars.length);
        codeVerifier += chars.charAt(randomIndex);
      }

      return codeVerifier;
    }

    /**
     * Generate a base64 encoded string from input and return the url safe result.
     * NOTE: The base64 value is NOT url encoded, but any non-url compliant characters are stripped out.
     * Any platform implementing the oauth PKCE standard will account for this when processing the code challenge.
     */
    async function base64UrlEncode(sha256HashBuffer) {
      // Convert the SHA-256 hash to a base64 URL encoded string
      const sha256HashArray = Array.from(new Uint8Array(sha256HashBuffer));
      const base64UrlEncoded = btoa(String.fromCharCode(...sha256HashArray))
        .replace(/=/g, '')
        .replace(/\+/g, '-')
        .replace(/\//g, '_');

      return base64UrlEncoded;
    }

    function getRandomString(length) {
      const s = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
      return Array(length).join().split(',').map(
        function() { 
          return s.charAt(Math.floor(Math.random() * s.length)); 
        }
      ).join('');
    }

    /**
     * Generate a code challenge from the verifier
     */
    async function generateCodeChallenge(codeVerifier) {
      const encoder = new TextEncoder();
      const encodedVerifier = encoder.encode(codeVerifier);
      const codeChallenge = base64UrlEncode(await crypto.subtle.digest('SHA-256', encodedVerifier));
      return codeChallenge;
    }

    /**
     * Issue a code challenge to the cognito authorization endpoint as the first step in 
     * acquiring an authorization code to exchange for a JWT.
     */
    function initiateAuthorizationRequest(codeChallenge, state) {
      const params = {
        response_type: 'code',
        client_id: clientId(),
        redirect_uri: `https://${redirectUri()}?action=login&selected_role=${selected_role}`,
        state: state,
        code_challenge: codeChallenge,
        code_challenge_method: 'S256'
      };
      
      const queryString = Object.keys(params).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`).join('&');
      const authorizationUrl = `${STATIC_PARAMETERS.COGNITO_DOMAIN}/oauth2/authorize?${queryString}`;
 
      window.location.href = authorizationUrl;
    }

    /**
     * Request an authorization code from the cognito authorization endpoint, with the original code verifier 
     * included as the second (and final) step in acquiring an authorization code to exchange for a JWT.
     * SEE: https://docs.aws.amazon.com/cognito/latest/developerguide/token-endpoint.html
     *      https://www.rfc-editor.org/rfc/rfc6749#section-3.2
     */
    async function exchangeAuthorizationCode(callback) {  
      const msg = document.getElementById('apiResponse');
      msg.innerHTML = '';
      const queryParams = new URLSearchParams(window.location.search);
      const authorizationCode = queryParams.get('code');
      const returnedState = queryParams.get('state')
      const savedState = window.sessionStorage.getItem("state");

      if(savedState !== returnedState) {
        throw Error("Probable session hijacking attack!");
      }

      if( ! authorizationCode) {
        throw Error('Authorization code not found in the URL.');
      }

      const codeVerifier = window.sessionStorage.getItem("code_verifier");
      const params = {
        grant_type: 'authorization_code',
        client_id: clientId(),
        redirect_uri: `https://${redirectUri()}?action=login&selected_role=${selected_role}`,
        state: savedState,
        code: authorizationCode,
        code_verifier: codeVerifier
      };

      const formData = Object.keys(params).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`).join('&');
      const tokenUrl = `${STATIC_PARAMETERS.COGNITO_DOMAIN}/oauth2/token`;

      const response = await fetch(tokenUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: formData
      });
      const data = await response.json();
      if(data.error) {
        msg.innerHTML = `<pre>${JSON.stringify(data, Object.getOwnPropertyNames(data), 2)}</pre>`;
      }
      else {
        AccessJwtCookie.setJwt(data.access_token);
        IDJwtCookie.setJwt(data.id_token);
      }

      await callback();
    }

    /**
     * Lookup the invitation with an api call. The invitation will also contain information as whether or not
     * the user has acknowledged privacy policy or registered already. Reflect the findings in the current screen.
     */
    function showEntityRegistrationScreen(step, invitationCode, callback) {
      const msg = document.getElementById('apiResponse');
      msg.innerHTML = '';

      /**
       * If a developer is straddling roles and has jwt tokens from the other role, these would need to be 
       * removed if the current page makes it though to the registration submission - the existing jwts will 
       * conflict with the ones issued upon post-registration account creation. So, logout just in case.
       */
      logout();

      switch(step) {
        case 'acknowledge-entity':
          var uri = `${STATIC_PARAMETERS.ACKNOWLEDGE_ENTITY_API_URI}/lookup-invitation/${invitationCode}`;
          break;
        case 'register-entity':
          var uri = `${STATIC_PARAMETERS.REGISTER_ENTITY_API_URI}/lookup-entity/${invitationCode}`;
          break;
      }
      fetch(uri, {
        method: 'GET',
        credentials: 'omit',
        mode: 'cors',
      })
      .then(response => response.json())
      .then((json) => {
        const { message, payload } = json;
        if(payload.ok) {
          callback(payload);
        }
        else {
          msg.innerHTML = message;
        }
      })
      .catch((e) => {
        msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
        callback({ invitation: { role: selected_role }}); // Should work for localhost testing
        // showSection(step);
      }); 
    }

    /**
     * This function is triggered as a callback from showEntityRegistrationScreen with the returned invitation.
     * If the invitation shows an acknowledgement timestamp, then enable buttons to goto the register-entity screen.
     */
    function showAcknowledgeEntityScreen(payload) {
      const msg = document.getElementById('apiResponse');
      msg.innerHTML = '';
      try {
        invitation = payload;
        const { acknowledged_timestamp } = invitation;
        const chk = document.getElementById('chkAcknowledgeEntity');
        const btnSubmit = document.getElementById('btnAcknowledgeEntitySubmit');
        if(acknowledged_timestamp) {
          msg.innerHTML = `You acknowledged the privacy policy at ${acknowledged_timestamp}`;
          chk.checked = true;
          btnSubmit.disabled = false;
        }
        else {
          chk.checked = false;
        }
      }
      catch(e) {
        msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
      }
      finally {
        showSection('acknowledge-entity');
      }
    }

    /**
     * This function is triggered as a callback from showEntityRegistrationScreen with the returned invitation.
     * If the invitation shows a register-entity timestamp, then enable buttons to goto cognito login.
     */
    function showRegisterEntityScreen(payload) {
      const msg = document.getElementById('apiResponse');
      msg.innerHTML = '';
      try {
        const { invitation:_invitation, users, entity } = payload;
        invitation = _invitation;
        const { acknowledged_timestamp, registered_timestamp, email:invEmail, role } = invitation;
        selected_role = role;
        const chk = document.getElementById('chkRegisterEntity');
        const btnSubmit = document.getElementById('btnRegisterEntitySubmit');
        const divTerminateEntity = document.getElementById('divTerminateEntity');

        if(selected_role == 'RE_ADMIN') {
          divTerminateEntity.style.display = 'none';
        }
        else {
          divTerminateEntity.style.display = 'inline';
        }
        if( ! acknowledged_timestamp) {
          showAcknowledgeEntityScreen(invitation);
          return;
        }
        if(registered_timestamp) {
          msg.innerHTML = `You registered at ${registered_timestamp}`;
          chk.checked = true;
          btnSubmit.disabled = true;
        }
        else {
          chk.checked = false;
          btnSubmit.disabled = true;
        }

        const sameUser = user =>  invEmail == user.email;
        const setField = (user, userfld, basename, index) => {
          let html = user[userfld] || '';
          if(userfld == 'email' && user.hasAccount() == false) {
            html = '';
          }
          if(sameUser(user)) { 
            if(userfld == 'phone_number') {
              document.getElementById(`td${basename}${index}`).innerHTML = html;
              document.getElementById(`td${basename}${index}Label`).innerHTML = '';
            }
            else {
              html = `<input type="text" class="form-control" id="txt${basename}${index}" value="${html}">`
            }                  
          }
          document.getElementById(`td${basename}${index}`).innerHTML = html;
        }
        const setFields = (user, basename, index) => {
          setField(user, 'fullname', `${basename}Name`, index||'');
          setField(user, 'title', `${basename}Title`, index||'');
          setField(user, 'phone_number', `${basename}Phone`, index||'');
          setField(user, 'email', `${basename}Email`, index||'');
          if(user.role == 'RE_AUTH_IND') {
            document.getElementById('tblAuthInd2').style.display = 'inline';
          }
        }
        
        document.getElementById(`tblAuthInd1`).style.display = 'none';
        document.getElementById(`tblAuthInd2`).style.display = 'none';

        if(entity) {
          document.getElementById('tblEntityName').style.display = 'inline';
          document.getElementById('tdEntityName').innerHTML = entity.entity_name;
          document.getElementById('tblAuthInd1').style.display = 'inline'; 
          let authIndCounter = 0;
          if(users && users.length > 0) {
            users.forEach((user) => {
              user.hasAccount = () => true;
              switch(user.role) {
                case 'RE_ADMIN':
                  setFields(user, 'ReAdmin');
                  break;
                case 'RE_AUTH_IND':
                  setFields(user, 'AuthInd', ++authIndCounter);
                  break;
              }
            });
          }
          if(authIndCounter < 2) {
            if( users.find(user =>  user.email == invitation.email )) {
              document.getElementById(`tblAuthInd${authIndCounter+1}`).style.display = 'none';
            }
            else {
              setFields({
                email: invitation.email,
                hasAccount: () => invitation.email != invitation.code,
                fullname: invitation.fullname,
                title: invitation.title,
                phone_number: invitation.phone_number
              }, 'AuthInd', authIndCounter+1);
            }
          }
        }
        else if(role == 'RE_ADMIN') {
          document.getElementById('tblEntityName').style.display = 'none';
          setFields({
            email: invitation.email,
            hasAccount: () => invitation.email != invitation.code,
            fullname: invitation.fullname,
            title: invitation.title,
            phone_number: invitation.phone_number
          }, 'ReAdmin');

        }
        else {
          showAcknowledgeEntityScreen(invitation);
          return;
        }
      }
      catch(e) {
        msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
      }
      finally {
        showSection('register-entity');
      }
    }

    /**
     * Submit acknowledgement of the privacy policy and if successful, navigate to the register-entity screen
     */
     function acknowledgeEntity(invitationCode) {
      const msg = document.getElementById('apiResponse');
      msg.innerHTML = '';
      try {
        const uri = `${STATIC_PARAMETERS.ACKNOWLEDGE_ENTITY_API_URI}/register/${invitationCode}`;
        fetch(uri, {
          method: 'GET',
          credentials: 'omit',
          mode: 'cors',
        })
        .then(response => response.json())
        .then((json) => {
          const { message, payload } = json;
          if(payload.ok) {
            document.location.href = `./?action=register-entity&code=${invitationCode}`;
          }
          else {
            msg.innerHTML = message;
          }
        })
        .catch((e) => {
          msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
        }); 
      }
      catch(err) {
        msg.innerHTML = `<pre>${JSON.stringify(err, Object.getOwnPropertyNames(err), 2)}</pre>`;
      }
    }

    /**
     * Submit entity registration and if successful, navigate to the cognito hosted UI.
     */
    function registerEntity(invitationCode) {
      const msg = document.getElementById('apiResponse');
      msg.innerHtml = '';
      const uri = `${STATIC_PARAMETERS.REGISTER_ENTITY_API_URI}/register/${invitationCode}`;
      const basename = selected_role == 'RE_ADMIN' ? 'ReAdmin' : 'AuthInd';
      const getAuthIndIndex = () => $(`#txt${basename}Email1`).length == 1 ? '1' : '2';
      const index = selected_role == 'RE_ADMIN' ? '' : getAuthIndIndex();
      const formdata = {
        email: $(`#txt${basename}Email${index}`).val(),
        fullname: $(`#txt${basename}Name${index}`).val(),
        title: $(`#txt${basename}Title${index}`).val()
      }
      const querystring = Object.keys(formdata).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(formdata[key])}`).join('&');

      fetch(`${uri}?${querystring}`, {
        method: 'GET',
        credentials: 'omit',
        mode: 'cors',
      })
      .then(response => response.json())
      .then((json) => {
        const { message, payload } = json;
        if(payload.ok) {
          let email = $('input[type="text"]').filter(function() {
              return /^txt[^\d]+Email\d*$/.test(this.id);
          })[0];
          email = email ? email.value : '';
          signUp(email);
        }
        else {
          msg.innerHTML = `<pre>${message}</pre>`;
        }
      })
      .catch((e) => {
        msg.innerHTML = `<pre>${e.message}</pre>`;
      }); 
    }

    /**
     * This is the "nuclear option".
     * Demolish the entire entity (users, invitations, entity, related cognito items)
     */
    const terminateEntity = async (invitationCode) => {
      if( ! confirm("This removal includes all other personnel registered with the entity and CANNOT BE UNDONE.\n\n" +
      "Click 'Ok' to proceed,\n" +
      "Click 'Cancel' to abort")) {
        alert('Cancelled');
        return;
      }
      const msg = document.getElementById('apiResponse');
      msg.innerHtml = '';
      try {
        const uri = `${STATIC_PARAMETERS.REGISTER_ENTITY_API_URI}/terminate/${invitationCode}`;
        
        document.body.style.cursor = 'progress';
        const response = await fetch(uri, {
          method: 'GET',
          credentials: 'omit',
          mode: 'cors',
        });

        const package = await response.json();
        document.body.style.cursor = 'progress';
        const { message, payload } = package;
        if(payload.ok) {
          alert('Entity terminated');
        }
        else {
          msg.innerHTML = `<pre>${JSON.stringify(package, null, 2)}</pre>`;
        }
      }
      catch(e) {
        msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
      }
    }

    /**
     * Invite a user
     */
    function invite(role, email, apiUri) {
      const msg = document.getElementById('apiResponse');
      msg.innerHTML = '';
      if( ! email) {
        alert("No email was entered");
        return;
      }
      const payload = {
        task: 'invite-user',
        parameters: { email, role }
      }
      fetch(apiUri, {
        method: 'GET',
        mode: "cors",
        credentials: 'include',
        headers: {
          'Authorization': `Bearer ${AccessJwtCookie.getJwt()}`,
          'Content-Type': 'application/json',
          [STATIC_PARAMETERS.PAYLOAD_HEADER]: JSON.stringify(payload)
        }
      })
      .then(response => response.json())
      .then((package) => {
        const { message, payload } = package;
        if(payload.ok) {
          alert('Invitation sent!');
          msg.innerHTML = 'Invitation sent!';
        }
        else {
          msg.innerHTML = `<pre>${JSON.stringify(package, null, 2)}</pre>`;
        }
      })
      .catch((e) => {
        msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
      });      
    }

    /**
     * Register the consenter. 
     */
    function registerConsenter() {
      const email = document.getElementById('txtConsenterEmail').value ?? '';
      const firstname = document.getElementById('txtConsenterFirstName').value ?? '';
      const middlename = document.getElementById('txtConsenterMiddleName').value ?? '';
      const lastname = document.getElementById('txtConsenterLastName').value ?? '';
      const msg = document.getElementById('apiResponse');

      if( ! firstname) {
        alert('First name required'); return;
      }
      if( ! lastname) {
        alert('Last name required'); return;
      }
      if( ! email) {
        alert('Email address required'); return;
      }

      msg.innerHTML = '';
      try {
        // Register consenters name and email to the backend.
        const payload = {
          parameters: { email, firstname, middlename, lastname }
        }
        fetch(STATIC_PARAMETERS.REGISTER_CONSENTER_API_URI, {
          method: 'GET',
          credentials: 'omit',
          mode: 'cors',
          headers: {
            'Content-Type': 'application/json',
            [STATIC_PARAMETERS.PAYLOAD_HEADER]: JSON.stringify(payload)
          }
        })
        .then(response => response.json())
        .then((json) => {
          const { message, payload } = json;
          if(payload.ok) {
            signUp(email); // Bring up the cognito signup hosted ui.
          }
          else {
            msg.innerHTML = `<pre>${message}</pre>`;
          }
        })
        .catch((e) => {
          msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
        }); 
      }
      catch(err) {
        msg.innerHTML = `<pre>${JSON.stringify(err, Object.getOwnPropertyNames(err), 2)}</pre>`;
      }
    }

    /**
     * Object for converting an ISO date string to a date and compare it to other date string values
     */
    function ComparableDate(timestamp) {
      if(timestamp) {
        this.date = typeof timestamp == 'string' ? new Date(timestamp) : timestamp;
      }
      else {
        this.date = new Date(0);
      }
      this.before = (_timestamp) => {
        const other = new ComparableDate(_timestamp);
        return this.date.getTime() < other.getTime();
      }
      this.after = (_timestamp) => {
        const other = new ComparableDate(_timestamp);
        return this.date.getTime() > other.getTime();
      }
      this.getTime = () => {
        return this.date.getTime();
      }
    }

    let consenterInfo;

    /**
     * Perform a consent related api task
     */
    const doConsentTask = async (task, parameters) => {
      const msg = document.getElementById('apiResponse');
      msg.innerHTML = '';
      try {
        // Perform the consent task.
        const response = await fetch(STATIC_PARAMETERS.ROLES['CONSENTING_PERSON'].API_URI, {
          method: 'GET',
          mode: 'cors',
          credentials: 'include',
          headers: {
            'Authorization': `Bearer ${AccessJwtCookie.getJwt()}`,
            'Content-Type': 'application/json',
            [STATIC_PARAMETERS.PAYLOAD_HEADER]: JSON.stringify({ task, parameters })
          }
        });

        // Set field values with from obtained payload
        const package = await response.json();
        const { message, payload } = package;
        if(payload.ok) {
          consenterInfo = payload;
          const { consenter, entities } = payload;
          const { active, consented_timestamp, renewed_timestamp, rescinded_timestamp, email } = consenter ?? {};

          const lastAction = () => {
            const consented = new ComparableDate(consented_timestamp);
            const rescinded = new ComparableDate(rescinded_timestamp);
            const renewed = new ComparableDate(renewed_timestamp);
            if(active == 'N') {
              return 'deactivated';
            }
            if(consented.after(rescinded) && consented.after(renewed)) {
              return 'consented';
            }
            if(renewed.after(consented) && renewed.after(rescinded)) {
              return 'renewed';
            }
            if(rescinded.after(consented) && rescinded.after(renewed)) {
              return 'rescinded';
            }
            return task == 'correct-consent' ? 'corrected' : 'none';
          }

          const hide = id => document.getElementById(id).style.display = 'none';
          const show = id => document.getElementById(id).style.display = '';
          const fill = (id, html) => document.getElementById(id).innerHTML = html;

          // Show the fields necessary to submit initial consent, including the submit button
          const showPreConsentFields = () => {
            const pendingMsg = 'Pending consent';
            const failureMsg = '<pre>Consent failed to register!</pre>';
            let msg = { 
              id: task == 'register-consent' ? 'apiResponse' : 'consentTimestamp',
              html: task == 'register-consent' ? failureMsg: pendingMsg
            };
            hide('consenter-exhibit-link');
            hide('consentOptions');
            show('consentFieldSet');
            fill(msg.id, msg.html);
          };

          // Show the buttons used to renew, rescind, or edit consent
          showPostConsentFields = (lastAction) => {
            const timestamp = renewed_timestamp ?? consented_timestamp;
            const consentMsg = `Consent ${lastAction} at: ${timestamp}`;
            const color = lastAction == 'rescinded' ? 'red' : 'green';
            show('consentRescind');
            show('consentRenew');
            show('consentCorrect');
            show('consentSend');
            show('consenter-exhibit-link');
            show('consentOptions');
            hide('consentFieldSet');
            fill('consentSendEmail', email);
            fill('consentTimestamp', `<span style='color:${color};'>${consentMsg}</span>`);
          };

          // Hide all consent options
          hideConsentFields = () => {
            document.getElementById('consenter-exhibit-link').style.display = 'none';
            document.getElementById('consentFieldSet').style.display = 'none';
            document.getElementById('consentOptions').style.display = 'none';
            fill('apiResponse', `${email} found to be deactivated`);
          }

          let _lastAction = lastAction();
          switch(lastAction()) {
            case 'none':
              showPreConsentFields();
              break;
            case 'consented':
              showPostConsentFields(_lastAction);
              break;
            case 'renewed':
              showPostConsentFields(_lastAction);
              break;
            case 'corrected': 
              showPostConsentFields(_lastAction);
              break;
            case 'rescinded':
              showPostConsentFields(_lastAction);
              hide('consentRescind');
              hide('consentCorrect');
              hide('consentSend');
              hide('consenter-exhibit-link');
              break;
            case 'deactivated':
              hideConsentFields();
              break;
          }
         }
        else {
          msg.innerHTML = `<pre>${message}</pre>`;
        }
      }
      catch(e) {
        msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
      }
    }

    /**
     * Get the full record for the consenter
     */
    const getConsenter = async () => {
      const { email } = IDJwtCookie.getUser() ?? {};
      await doConsentTask('get-consenter', { email });
      const { consenter: { phone_number }, fullName } = consenterInfo ?? {};
      document.getElementById('txtConsentFullname').value = fullName;
      document.getElementById('txtConsentEmail').value = email;
      document.getElementById('txtConsentPhone').value = phone_number;
      document.getElementById('txtConsentEditFullname').value = fullName;
      document.getElementById('txtConsentEditEmail').value = email;
      document.getElementById('txtConsentEditPhone').value = phone_number;
      return consenterInfo;
    }

    /**
     * Register consent.
     */
    const registerConsent = async () => {
      const { email } = IDJwtCookie.getUser() ?? {};
      const getFldVal = fldname => document.getElementById(fldname).value ?? '';
      const parms = { 
        signature:getFldVal('txtConsentSignature'),
        fullname:getFldVal('txtConsentFullname'),
        email:getFldVal('txtConsentEmail'),
        phone:getFldVal('txtConsentPhone'),
      }

      if( ! parms.signature) { alert('Signature required'); return; }
      if( ! parms.fullname) { alert('Fullname required'); return; }
      if( ! parms.email) { alert('Email address required'); return; }
      if( ! parms.phone) { alert('Phone number required'); return; }
      if(parms.email != email) { 
        alert(`Your email entry ${parms.email} must match your registration email: ${email}`); 
        return;
      }

      await doConsentTask('register-consent', parms);
    }

    /**
     * Renew consent.
     */
    const renewConsent = async () => {
      const { email } = IDJwtCookie.getUser() ?? {};
      await doConsentTask('renew-consent', { email });
    }

    /**
     * Rescind consent.
     */
    const rescindConsent = async () => {
      const { email } = IDJwtCookie.getUser() ?? {};
      await doConsentTask('rescind-consent', { email });
    }

    /**
     * Send the consenter a pdf copy of the consent form via email
     */
    const sendConsent = async () => {
      const { email } = IDJwtCookie.getUser() ?? {};
      // TODO: Mention of a specific entity in the consent form is in question and needs to be resolved with the client.
      await doConsentTask('send-consent', { email, entityName: 'unknown entity' });
      alert('Consent form sent');
    }

    /**
     * Submit corrections to the consenter consent form information. NOTE: Not implemented on the backend (pending client discussion)
     */
    const correctConsent = async () => {
      const { email } = IDJwtCookie.getUser() ?? {};
      const alt_email = document.getElementById('txtConsentEditEmail').value;
      const full_name = document.getElementById('txtConsentEditFullname').value;
      const phone_number = document.getElementById('txtConsentEditPhone').value;
      const signature = document.getElementById('txtConsentEditSignature').value;
      await doConsentTask('correct-consent', { email, alt_email, full_name, phone_number, signature });
    }

    /**
     * Add or remove a red border of a field depending on whether it has a selection/value or not.
     */
    function toggleHighlight(fld, on_off) {
      let _on_off = on_off;
      if(on_off == undefined) {
        _on_off = fld.nodeName == 'SELECT' && fld.selectedIndex == 0;
        _on_off |= fld.nodeName == 'INPUT' && ! fld.value;
      }
      fld.style.borderStyle = _on_off ? 'solid' : '';
      fld.style.borderWidth = _on_off ? '2px' : '';
      fld.style.borderColor = _on_off ? 'red' : '';
      return _on_off;
    }

    /**
     * Apply and process event to any field within an affiliate row for handling empty values.
     */
    function validateAffiliateRow(row) {
      [ 'select', 'input'].forEach(tagname => {
        const flds = row.getElementsByTagName(tagname);
        for (const fld of flds) {
          toggleHighlight(fld, false);
          const _event = tagname == 'select' ? 'change' : 'keyup';
          fld.addEventListener(_event, () => { 
            toggleHighlight(fld); 
          })
        };
      })
    }

    /**
     * Add or remove a point of contact from the exhibit form
     */
    function changePoc(task) {
      if(task == 'add') {
        const tbl = document.getElementById('tblPoc');
        const tr = document.getElementById('trPoc');
        const newrow = tbl.insertRow();
        newrow.innerHTML = tr.innerHTML;

        // Remove red borders of any of the rows child fields if they have them.
        validateAffiliateRow(newrow);
        
        // Call the tooltip activation command globally to enable tooltips for the new fields of the new row.
        $('[data-toggle="tooltip"]').tooltip({ 
          html:true,
        })
      }
      if(task == 'remove') {
        const tb = document.getElementById('tbPoc');
        if(tb.childElementCount > 1) {
          // $('#exhibit-tooltip-3').tooltip('hide');
          $('[data-toggle="tooltip"]').tooltip('hide');
          const row = event.srcElement.parentElement.parentElement.parentElement;
          tb.removeChild(row);
        }
      }
    }

    /**
     * Return a boolean indicating if all exhibit form fields are filled out with valid values.
     */
    function validExhibitForm() {
      let empty = false;

      // Put a red border on the requesting entity picklist if no entity is selected from it.
      empty |= toggleHighlight(document.getElementById('lbxRequestingEntity'));

      // Put red borders on any affliate field that is empty.
      [ 'select', 'input'].forEach(tagname => {
        const flds = document.getElementById('tblPoc').getElementsByTagName(tagname);
        for (const fld of flds) {
          toggleHighlight(fld);
        };
      });
      [ 'txtExhibitSignature', 'txtExhibitFullname', 'txtExhibitEmail', 'txtExhibitPhone' ].forEach(fldId => {
        toggleHighlight(document.getElementById(fldId));
      });
      return empty;
    }

    /**
     * Put each affliate in a modal dialog in the form of a single exhibit form with the ability 
     * to sign each of them in order using another next button.
     */
    function signSingleExhibitForms() {
      console.log('not implemented yet');
    }

    const refreshDbTable = async (tableName) => {
      const msg = document.getElementById('apiResponse');
      msg.innerHTML = '';
      try {
        const role = AccessJwtCookie.getRole().name;
        const apiUri = STATIC_PARAMETERS.ROLES[role].API_URI
        
        document.body.style.cursor = 'progress';
        const response = await fetch(apiUri, {
          method: 'GET',
          mode: 'cors',
          credentials: 'include',
          headers: {
            'Authorization': `Bearer ${AccessJwtCookie.getJwt()}`,
            'Content-Type': 'application/json',
            [STATIC_PARAMETERS.PAYLOAD_HEADER]: JSON.stringify({
              task: 'get-db-table',
              parameters: { tableName }
            })
          }
        });

        const package = await response.json();
        document.body.style.cursor = 'default';
        const { message, payload } = package;
        if(payload.ok) {
          const { html } = payload;
          document.getElementById(`db-table-${tableName}`).innerHTML = html;
        }
        else {
          msg.innerHTML = `<pre>${JSON.stringify(package, null, 2)}</pre>`;
        }
      }
      catch(e) {
        msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
      }
    }


    /**
     * Signup for a cognito userpool account.
     */
    function signUp(email) {
      const params = {
        client_id: clientId(),
        response_type: 'code',
        scope: 'email+openid+phone',
        redirect_uri: encodeURIComponent(`https://${redirectUri()}?action=post-signup&selected_role=${selected_role}`)
      };

      if(email) {
        params.username = email;
      }
      const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&');
      const signUpUrl = `${STATIC_PARAMETERS.COGNITO_DOMAIN}/signup?${queryString}`;
      window.location.href = signUpUrl;
    }

    /**
     * Authenticate with the cognito user pool in such a way as to reflect that it implements the
     * oauth PKCE standard. The final redirect should come with a JWT for all api access.
     */
    function signIn() {
      const codeVerifier = generateCodeVerifier();
      const state = getRandomString(12);

      // Save state and code_verifier in session storage
      const storage = window.sessionStorage;
      storage.clear();
      storage.setItem("state", state);
      storage.setItem("code_verifier", codeVerifier);

      generateCodeChallenge(codeVerifier).then(codeChallenge => {
        initiateAuthorizationRequest(codeChallenge, state);
      });
    }

    function signOut() {
      const params = {
        client_id: clientId(),
        logout_uri: encodeURIComponent(`https://${redirectUri()}?action=logout`)
      };
      const queryString = Object.keys(params).map(key => `${key}=${params[key]}`).join('&');
      const signOutUrl = `${STATIC_PARAMETERS.COGNITO_DOMAIN}/logout?${queryString}`;

      window.location.href = signOutUrl;
    }

    // https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-using-the-access-token.html
    // https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-integrate-with-cognito.html
    function pingApi() {
      fetch(apiUri(), {
        method: 'GET',
        mode: "cors",
        credentials: 'include',
        headers: {
          'Authorization': `Bearer ${AccessJwtCookie.getJwt()}`,
          'Content-Type': 'application/json',
          [STATIC_PARAMETERS.PAYLOAD_HEADER]: '{ "task": "ping" }'
        }
      })
      .then((response) => {
        if (response.ok) {
          return response.text();
        } 
        else {
          document.getElementById('apiResponse').innerHTML = `Bad response: <br><textarea rows=5 cols=80>${JSON.stringify(response.body, null, 2)}</textarea>`;
        }
      })
      .then((text) => {
        document.getElementById('apiResponse').innerHTML = `API response: ${text}`;
      })
      .catch((error) => {
        document.getElementById('apiResponse').innerHTML = `API error: <br><textarea rows=5 cols=80>${JSON.stringify({msg: error.message, stack: error.stack}, null, 2)}</textarea>`;
      });
    }

    /**
     * Make an api call to retrieve information about the currently logged in user along with entity info
     */
    const setUserContext = async () => {
      const msg = document.getElementById('apiResponse');
      msg.innerHTML = '';
      try {
        const role = AccessJwtCookie.getRole().name;
        const email = IDJwtCookie.getUser().email;
        const apiUri = STATIC_PARAMETERS.ROLES[role].API_URI
        const outgoingPayload = {
          task: 'lookup-user-context',
          parameters: { email, role }
        }
  
        const response = await fetch(apiUri, {
          method: 'GET',
          mode: "cors",
          credentials: 'include',
          headers: {
            'Authorization': `Bearer ${AccessJwtCookie.getJwt()}`,
            'Content-Type': 'application/json',
            [STATIC_PARAMETERS.PAYLOAD_HEADER]: JSON.stringify(outgoingPayload)
          }
        });
        const package = await response.json();
        const { message, payload } = package;
        if(payload.ok) {
          userContext = payload.user;
          return userContext;
        }
        else {
          msg.innerHTML = `<pre>${JSON.stringify(package, null, 2)}</pre>`;
        }
      }
      catch (e) {
        msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
      }
    }

    const createEntity = async () => {
      const msg = document.getElementById('apiResponse');
      msg.innerHTML = '';
      try {
        const role = AccessJwtCookie.getRole().name;
        const apiUri = STATIC_PARAMETERS.ROLES[role].API_URI
        const entity_name = $('#txtReAdminEntityName').val();
        const entity_description = entity_name;
        if( ! entity_name) {
          alert('Required entry: Entity name');
          return;
        }
        const outgoingPayload = {
          task: 'create-entity',
          parameters: { entity_name, entity_description }
        }

        const response = await fetch(apiUri, {
          method: 'GET',
          mode: 'cors',
          credentials: 'include',
          headers: {
            'Authorization': `Bearer ${AccessJwtCookie.getJwt()}`,
            'Content-Type': 'application/json',
            [STATIC_PARAMETERS.PAYLOAD_HEADER]: JSON.stringify(outgoingPayload)
          }
        });

        const package = await response.json();
        const { message, payload } = package;
        if(payload.ok) {
          await setUserContext();
          document.getElementById('btnReAdminEntityUpdate').style.display = 'inline';
          alert('Entity created');
        }
        else {
          msg.innerHTML = `<pre>${JSON.stringify(package, null, 2)}</pre>`;
        }
      }
      catch(e) {
        msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
      }
    }

    /**
     * Combines createEntity and invite (twice) as a consolidated RE_ADMIN task
     */
    const createEntityAndInviteUsers = async () => {
      const msg = document.getElementById('apiResponse');
      msg.innerHTML = '';
      try {
        const email = IDJwtCookie.getUser().email;
        const role = AccessJwtCookie.getRole().name;
        const apiUri = STATIC_PARAMETERS.ROLES[role].API_URI
        const entity_name = $('#txtReAdminEntityName').val();
        const email1 = $('#txtReAdminEmailToInvite1').val();
        const email2 = $('#txtReAdminEmailToInvite2').val();
        const description = entity_name;
        if( ! entity_name) {
          alert('Required entry: Entity name');
          return;
        } 
        if( ! email1) {
          alert('Required entry: Authorized Individual 1 email address');
          return;
        }
        if( ! email2) {
          alert('Required entry: Authorized Individual 2 email address');
          return;
        }
        const outgoingPayload = {
          task: 'create-entity-invite',
          // parameters: { email, role, entity_name, description, email1, email2 }
          parameters: {
            entity: {
              name:entity_name, description:entity_name
            },
            invitations: {
              from: {
                email, role
              },
              invitee1: { email: email1, role:'RE_AUTH_IND' },
              invitee2: { email: email2, role:'RE_AUTH_IND' }
            }
          }
        }

        document.body.style.cursor = 'progress';
        const response = await fetch(apiUri, {
          method: 'GET',
          mode: 'cors',
          credentials: 'include',
          headers: {
            'Authorization': `Bearer ${AccessJwtCookie.getJwt()}`,
            'Content-Type': 'application/json',
            [STATIC_PARAMETERS.PAYLOAD_HEADER]: JSON.stringify(outgoingPayload)
          }
        });

        const package = await response.json();
        document.body.style.cursor = 'default';
        const { message, payload } = package;
        if(payload.ok) {
          userContext = payload.user;
          document.getElementById('btnReAdminEntityUpdate').style.display = 'inline';
          alert('Entity created');
        }
        else {
          msg.innerHTML = `<pre>${JSON.stringify(package, null, 2)}</pre>`;
        }
      }
      catch(e) {
        msg.innerHTML = `<pre>${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}</pre>`;
      }
    }

    /**
     * This function serves as a utility object for processing JWTs received from cognito and the cookies they are stored in.
     */
    const JwtCookie = function(cookieName) {
      this.getCookie = function() {
        const cookies = document.cookie.split(';').map(cookie => cookie.trim());
        for (const cookie of cookies) {
          if (cookie.startsWith(cookieName + '=')) {
            return cookie;
          }
        }
        return null; // JWT cookie not found
      };
      this.getJwt = function() {
        const cookie = this.getCookie();
        if(cookie) {
          return decodeURIComponent(cookie.substring(cookieName.length + 1));
        }
        return null; // JWT cookie not found
      };
      this.setJwt = function(jwt) {
        const secureFlag = window.location.protocol === 'https:' ? '; Secure' : '';
        const decodedToken = this.getDecodedToken(jwt);
        const expirationDate = new Date();
        if(decodedToken.expires_in) {
          expirationDate.setTime(expirationDate.getTime() + decodedToken.expires_in * 1000); // Convert expires_in from seconds to milliseconds
        } 
        else if(decodedToken.exp) {
          expirationDate.setTime(decodedToken.exp * 1000); // Convert the 'exp' claim to milliseconds
        }
        else {
          console.error("Cookie not set. No expiration claims found in jwt");
          return;
        }
        const expires = `; expires=${expirationDate.toUTCString()}`;
        const cookieValue = encodeURIComponent(jwt) + expires + secureFlag + '; SameSite=Strict';
        document.cookie = `${cookieName}=${cookieValue}`;
        // Now that the cookie is set and we have the JWT, we don't need the state and code verfier values anymore.
        const storage = window.sessionStorage;
        storage.clear();
      };
      this.clearJwt = function() {
        document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;
      };
      this.getDecodedToken = function(jwt) {
        if(!jwt) jwt = this.getJwt();
        if(!jwt) return null;
        return JSON.parse(atob(jwt.split('.')[1])); // Decoding the token payload (middle part)
      };
      this.jwtExpired = function() {
        const decodedToken = this.getDecodedToken();
        const currentTime = new Date();
        if (decodedToken?.expires_in) {
          const expirationTime = new Date(decodedToken.iat * 1000 + decodedToken.expires_in * 1000);
          return currentTime >= expirationTime;              
        }
        else if(decodedToken?.exp) {
          const expirationTime = new Date(decodedToken.exp * 1000);
          return currentTime >= expirationTime;
        }
        return true;
      };
      /**
       * This function is an alternative to jwtExpired. The cookie expiration was set during its creation
       * based on the expiration of the jwt. Should be same result but more efficient to check expiration this way.
       */ 
      this.cookieExpired = function() {
        const cookie = this.getCookie();
        if(cookie) {
          const expirationTime = new Date(cookie.split(';').find(part => part.trim().startsWith('expires='))).getTime();
          const currentTime = new Date().getTime();
          return currentTime >= expirationTime;
        }
        console.log(`${cookieName} cookie is expired`);
        return true;
      };
      this.getUser = function() {
        const decodedToken = this.getDecodedToken();
        const { name, email } = decodedToken;
        return { name, email, getDisplayName: () => name || email };
      }
      this.getRole = function() {
        let retval = { };
        try {
          const decodedToken = this.getDecodedToken();
          // Set the role in a global variable - the value should be evident from the scope found in the access JWT.
          decodedToken.scope.split(' ').forEach(s => { 
            if(/\//.test(s)) selected_role = s.split('/')[0]; 
          });         
          const { client_id } = decodedToken;
          const roles = STATIC_PARAMETERS.ROLES;
          Object.keys(roles).forEach(rolename => {
            if(roles[rolename].CLIENT_ID == client_id) {
              retval.name = selected_role;
              retval.fullname = roles[rolename].FULLNAME;
            }
          })
        }
        finally {
          return retval;
        }
      }
    };

    // Fill out placeholder elements with the name and role of the signed in user.
    const setName = (role, user) => {
      document.getElementById(`${role.name}_username`).innerHTML = `${role.fullname} ${user.getDisplayName()}`;
    }

    // Define the different sections of the page and a function to switch between them
    const sections = [ 'auth', 'app', 'acknowledge-entity', 'acknowledge-consenter', 'register-entity', 'register-consenter' ];
    const showSection = (sectionToShow) => {
      sections.forEach(section => {
        document.getElementById(`${section}-section`).style.display = sectionToShow == section ? 'block' : 'none';
      })
    }

    IDJwtCookie= new JwtCookie('EttIdJwt')
    AccessJwtCookie = new JwtCookie('EttAccessJwt');
    RefreshJwtCookie = new JwtCookie('EttRefreshJwt');

    const logout = () => {
      AccessJwtCookie.clearJwt();
      IDJwtCookie.clearJwt();
      RefreshJwtCookie.clearJwt();
    }

    // Check the querystring for action=login on page load

    $( document ).ready(function() {
      onDocumentLoad()
      .then(() => {
        console.log('onDocumentLoad complete.')
      })
      .finally(() => {
        document.body.style.display = 'default';
      });
    });
    // window.onload = () => {
    //   onDocumentLoad().then(() => console.log('onDocumentLoad complete.'));;
    // }

    const onDocumentLoad = async () => {
      document.body.style.display = 'progress';
      const queryParams = new URLSearchParams(window.location.search);

      // Get querystring parameters
      const action = queryParams.get('action');
      const invitationCode = queryParams.get('code');

      // Assign events to buttons
      document.getElementById('btnSignin').addEventListener('click', () => {
        signIn();
      });
      document.getElementById('btnSignup').addEventListener('click', () => {
        if(selected_role = 'CONSENTING_PERSON') {
          showSection('acknowledge-consenter');
        }
        else {
          signUp();
        }
      });
      document.getElementById('btnPingApi').addEventListener('click', () => {
        pingApi();
      });
      document.getElementById('btnSignout').addEventListener('click', () => {
        signOut();
      });
      document.getElementById('btnAcknowledgeEntitySubmit').addEventListener('click', () => {
        acknowledgeEntity(invitationCode);
      });
      document.getElementById('btnRegisterEntitySubmit').addEventListener('click', () => {
        registerEntity(invitationCode);
      });
      document.getElementById('btnTerminateEntity').addEventListener('click', async () => {
        await terminateEntity(invitationCode);
      });
      document.getElementById('btnSysAdminInvite').addEventListener('click', () => {
        const role = $("input[name='rdoSysAdminInvite']:checked").val();
        const email = $('#txtSysAdminEmailToInvite').val();
        const apiUri = STATIC_PARAMETERS.ROLES['SYS_ADMIN'].API_URI;
        invite(role, email, apiUri);
      });
      document.getElementById('btnReAdminInvite').addEventListener('click', async () => {
        await createEntityAndInviteUsers();
      });
      document.getElementsByName('rdoSysAdminInvite').forEach(rdo => {
        rdo.addEventListener('click', () => {
          const val = event.srcElement.value;
          const entities = document.getElementById('divSysAdminEntities');
          const email = document.getElementById('divSysAdminEmailToInvite');
          entities.style.display = 'none';
          email.style.display = 'none';
          if( ! val) return;
          email.style.display = 'inline-block';
          if( val == 'RE_AUTH_IND') entities.style.display = 'inline-block';
        })
      });
      document.getElementById('btnAcknowledgeConsenterSubmit').addEventListener('click', () => {
        showSection('register-consenter');
      });
      document.getElementById('txtConsenterSignature').addEventListener('keyup', (event) => {
        let val = event.srcElement.value;
        document.getElementById('btnRegisterConsenterSubmit').disabled = val ? false : true;
      });
      document.getElementById('btnRegisterConsenterSubmit').addEventListener('click', () => {
        registerConsenter();
      });
      document.getElementById('txtConsentSignature').addEventListener('keyup', (event) => {
        let val = event.srcElement.value;
        document.getElementById('btnRegisterConsentSubmit').disabled = val ? false : true;
      });
      document.getElementById('btnRegisterConsentSubmit').addEventListener('click', () => {
        registerConsent();
      });
      document.getElementById('btnRenewConsent').addEventListener('click', () => {
        renewConsent();
      });
      document.getElementById('btnRescindConsent').addEventListener('click', () => {
        rescindConsent();
      });
      document.getElementById('btnSendConsent').addEventListener('click', () => {
        sendConsent();
      });
      document.getElementById('btnCorrectConsent').addEventListener('click', () => {
        correctConsent();
      });
      document.getElementById('lbxRequestingEntity').addEventListener('change', (event) => {
        const lbx = event.srcElement;
        toggleHighlight(lbx);
        document.getElementById('spanRequestingEntity').innerText = lbx.options[lbx.selectedIndex].innerText;
      });
      document.getElementById('btnExhibitNext').addEventListener('click', () => {
        if(validExhibitForm()) {
          signSingleExhibitForms();
        }
      });
      document.getElementById('txtExhibitSignature').addEventListener('keyup', () => {
        toggleHighlight(event.srcElement);
      });
      document.getElementById('txtExhibitFullname').addEventListener('keyup', () => {
        toggleHighlight(event.srcElement);
      });
      document.getElementById('txtExhibitEmail').addEventListener('keyup', () => {
        toggleHighlight(event.srcElement);
      });
      document.getElementById('txtExhibitPhone').addEventListener('keyup', () => {
        toggleHighlight(event.srcElement);
      });
      validateAffiliateRow(document.getElementById('trPoc'));

      // Add show/hide behavior to the SYS_ADMIN tabstrip
      $('#sysAdmin a').on('click', function (e) {
        e.preventDefault()
        $(this).tab('show')
      });

      // Add show/hide behavior to the RE_ADMIN tabstrip
      $('#reAdmin a').on('click', function (e) {
        e.preventDefault()
        $(this).tab('show')
      });

      // Add show/hide behavior to the RE_ADMIN tabstrip
      $('#consenter a').on('click', function (e) {
        e.preventDefault()
        $(this).tab('show')
      });

      const tooltips = {
        consent: [
          '<b>Ethical Transparency Tool</b> (or ETT) means a tool that enables each Consent Recipient to provide a completed Disclosure Form about a person who has signed and delivered a Consent Form (this form), to any ETT-Registered Entit(ies) that make(s) a request.  Each entity retains its independence in policymaking and decision-making (e.g., when to use the ETT and how to respond to disclosures).',
          '<b>Principles</b> mean the statements in “Part A. FUNDAMENTAL PRINCIPLES” of the Consent Form.',
          '<b>Privilege(s) or Honor(s)</b> — Examples include but are not limited to: elected fellow, elected or life membership; recipient of an honor, award, or an emeritus or endowed role; elected or appointed governance, committee, officer, or leadership role. However, Privilege(s) or Honor(s) <b>DO NOT</b> include basic membership in an academic, professional, or honorary society at an individual’s initiative (i.e., when not elected or awarded).  Other Privilege(s) or Honor(s) that an ETT-Registered Entity identifies as affecting climate and culture or enterprise risk may be included (e.g., volunteer roles).',
          '<b>Employment or Role(s)</b> — Examples include but are not limited to: employment; employee appointment or assignment to a supervisory, evaluative, or mentoring role. Other employment related roles or decisions that an ETT-Registered Entity identifies as affecting climate and culture or enterprise risk may be included.',
          '<b>Consent Recipient(s)</b> mean the entities referenced in Part B. 1, 2, 3, 4 of the Consent Form.  A Consent Recipient is the “Disclosing Entity” that completes a Disclosure Form when requested.  For up-to-date information, the person who submits a Consent Form also provides a list of the names of their Consent Recipients, with contacts, using Exhibit Forms at this link each time any ETT-Registered Entity is considering the person for a Privilege or Honor, Employment or Role and makes a request. (The Exhibit Forms template may be amended for amplification or clarity over time and re-posted.)',
          '<b>The Disclosure Form</b> is the form at this link (and may be amended for amplification or clarity over time and re-posted).  Finding of Responsibility is a finding of any one or more of the generic types of misconduct listed/referenced on the Disclosure Form.  A Finding of Responsibility is defined by the Consent Recipient that made or adopted the finding under its own policy (see the Disclosure Form for details).  A Disclosure Form is completed when a Consent Recipient checks one or more Finding(s) of Responsibility that it has made or adopted against a person or when it checks “No Finding of Responsibility” or “Will Not Be Responding”. ',
          '<b>ETT-Registered Entit(ies)</b> mean the entities and organizations now or in the future registered to use the Ethical Transparency Tool.  See this link for a list, which will be updated over time. ETT-Registered Entities are the only entities that may request completed Disclosure Forms from Consent Recipients.',
        ],
        exhibit: [
          'The organization/entity you select here will receive your completed exhibit form via email',
          '<br><ol><li><b>Employers</b><br>List your current employers and former employers for the period specified by the ETT-Registered Entity that requested this Exhibit Form (“Registered Entity”) in connection with considering you for a Privilege or Honor, Employment or Role. List up to date contacts of the type specified by the ETT-Registered Entity (e.g., HR, supervisor, department head)</li><li><b>Academic / Professional Societies & Organizations</b><br>List your current and former academic, professional, and field-related honorary and membership societies and organizations (same period as under 1 above). Contact should be the Executive Director/CEO.</li><li><b>Other Affiliated Organizations</b><br>List the current and former organizations where you have or had emeritus/emerita, visiting, or other teaching, research, or administrative appointments—or that have given you an honor or award (same period and contact as under 1 above)</li></ol>',
          'Add another affiliate',
          'Remove this affiliate'
        ]
      }

      // Set the tooltips for every qualifying element
      $('span[data-toggle="tooltip"]').each(function() {
        const idx = /\d+$/.exec(this.id)[0];        
        if(idx) {
          const subject = /^[^\-]+/.exec(this.id)[0];
          if(subject) {
            // Define the text of the tooltip. Inline styles do not seem to work, so using class instead for alignment.
            this.title = tooltips[subject][parseInt(idx)];
          }
        }
      })

      // Enable tooltips globally
      $(function () {
        $('[data-toggle="tooltip"]').tooltip({ 
          html:true
        })
      });

      // Function for checking the users login status and selecting the correct view based on the JWT content.
      const checkAuth = async () => {
        const showAppForRole = async () => {
          showSection('app');
          switch(selected_role) {
                
            case 'SYS_ADMIN':
              document.getElementById('app-section-SYS_ADMIN').style.display = 'inline';
              document.getElementsByName('rdoSysAdminInvite')[1].click();
              break;

            case 'RE_ADMIN':
              await setUserContext();
              const entity = userContext?.entity || {};
              const isEmpty = e => Object.keys(e).length == 0;
              if(isEmpty(entity)) {
                $('#btnReAdminEntityUpdate').hide();
              }
              $('#txtReAdminEntityName').val(entity.entity_name);
              document.getElementById('app-section-RE_ADMIN').style.display = 'inline';
              break;

            case 'RE_AUTH_IND':
              document.getElementById('app-section-RE_AUTH_IND').style.display = 'inline';
              break;
            
            case 'CONSENTING_PERSON':
              document.getElementById('app-section-CONSENTING_PERSON').style.display = 'inline';
              if(localTesting()) {
                break;
              }
              const ctr = await getConsenter();
              break;

            default:
              showSection('auth');
              break;
          }
        }

        if(localTesting()) {
          await showAppForRole();
        }
        else if(!AccessJwtCookie.jwtExpired()) {
          setName(AccessJwtCookie.getRole(), IDJwtCookie.getUser())
          await showAppForRole();        
        }
        else if(!RefreshJwtCookie.jwtExpired()) {
          // TODO: Use the refresh token to restore access.
          console.log('Token refresh not implemented yet.');
        }
        else {
          showSection('auth');
        }
      }


      /**
       * 1) Render the screen that corresponds to the task querystring parameter (no task defaults to the login screen)
       * 2) Perform any "onload" actions specific to the task.
       */
      switch(action) {

        case 'acknowledge-entity':
          showEntityRegistrationScreen(action, invitationCode, showAcknowledgeEntityScreen);
          break;

        case 'register-entity':
          showEntityRegistrationScreen(action, invitationCode, showRegisterEntityScreen);
          break;

        case 'acknowledge-consenter': 
          showSection(action);
          break;
        
        case 'register-consenter':
          let acknowledged = document.getElementById('chkAcknowledgeConsenter').checked;
          const section = acknowledged ? action : 'acknowledge-consenter';
          showSection(section);
          break;

        case 'login':
          await exchangeAuthorizationCode(checkAuth);
          // Redirect back to the plain root url to shed the action, code, and state parameters
          document.location.href = document.location.origin;
          break;

        case 'post-signup':
          document.getElementById('btnSignup').style.display = 'none';
          signIn();
          break;

        case 'logout':
          // Remove JWT access and refresh tokens from cookies
          logout();
          console.log('Sign out successful');
          await checkAuth();
          break;

        default:
          await checkAuth();
          break;
      }
    };

  </script>
</script>   
</body>
</html>